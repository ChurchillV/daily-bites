{"version":3,"sources":["AlertDialog.tsx"],"names":["React","forwardRef","memo","StyleSheet","Backdrop","Slide","FocusScope","useControllableState","usePropsResolution","AlertDialogContext","Box","Fade","useKeyboardBottomInset","Overlay","useHasResponsiveProps","AlertDialog","children","isOpen","onClose","defaultIsOpen","initialFocusRef","finalFocusRef","avoidKeyboard","closeOnOverlayClick","isKeyboardDismissable","overlayVisible","backdropVisible","animationPreset","rest","ref","bottomInset","contentSize","_backdrop","_backdropFade","_fade","_slide","_overlay","useRNModal","restThemeProps","visible","setVisible","value","defaultValue","onChange","val","handleClose","child","undefined","absoluteFill"],"mappings":"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","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport { StyleSheet } from 'react-native';\nimport Backdrop from '../Backdrop';\nimport { Slide } from '../Transitions';\nimport { FocusScope } from '@react-native-aria/focus';\nimport { useControllableState, usePropsResolution } from '../../../hooks';\nimport { AlertDialogContext } from './Context';\nimport Box from '../../primitives/Box';\nimport type { IAlertDialogProps } from './types';\nimport { Fade } from '../Transitions';\nimport { useKeyboardBottomInset } from '../../../utils';\nimport { Overlay } from '../../primitives/Overlay';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst AlertDialog = (\n  {\n    children,\n    isOpen,\n    onClose,\n    defaultIsOpen,\n    initialFocusRef,\n    finalFocusRef,\n    avoidKeyboard,\n    closeOnOverlayClick = false,\n    isKeyboardDismissable = true,\n    overlayVisible = true,\n    backdropVisible = true,\n    animationPreset,\n    ...rest\n  }: IAlertDialogProps,\n  ref: any\n) => {\n  const bottomInset = useKeyboardBottomInset();\n  const {\n    contentSize,\n    _backdrop,\n    _backdropFade,\n    _fade,\n    _slide,\n    _overlay,\n    useRNModal,\n    ...restThemeProps\n  } = usePropsResolution('AlertDialog', rest);\n\n  const [visible, setVisible] = useControllableState({\n    value: isOpen,\n    defaultValue: defaultIsOpen,\n    onChange: (val) => {\n      if (!val) onClose && onClose();\n    },\n  });\n\n  const handleClose = () => setVisible(false);\n\n  const child = (\n    <Box\n      bottom={avoidKeyboard ? bottomInset + 'px' : undefined}\n      {...restThemeProps}\n      ref={ref}\n    >\n      {children}\n    </Box>\n  );\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(rest)) {\n    return null;\n  }\n\n  return (\n    <Overlay\n      isOpen={visible}\n      onRequestClose={handleClose}\n      isKeyboardDismissable={isKeyboardDismissable}\n      useRNModalOnAndroid\n      useRNModal={useRNModal}\n      {..._overlay}\n    >\n      <AlertDialogContext.Provider\n        value={{\n          handleClose,\n          contentSize,\n          initialFocusRef,\n          finalFocusRef,\n        }}\n      >\n        <Fade in={visible} style={StyleSheet.absoluteFill} {..._backdropFade}>\n          {overlayVisible && backdropVisible && (\n            <Backdrop\n              onPress={() => {\n                closeOnOverlayClick && handleClose();\n              }}\n              {..._backdrop}\n            />\n          )}\n        </Fade>\n        {animationPreset === 'slide' ? (\n          <Slide in={visible} {..._slide}>\n            <FocusScope\n              contain={visible}\n              autoFocus={visible && !initialFocusRef}\n              restoreFocus={visible && !finalFocusRef}\n            >\n              {child}\n            </FocusScope>\n          </Slide>\n        ) : (\n          <Fade in={visible} style={StyleSheet.absoluteFill} {..._fade}>\n            <FocusScope\n              contain={visible}\n              autoFocus={visible && !initialFocusRef}\n              restoreFocus={visible && !finalFocusRef}\n            >\n              {child}\n            </FocusScope>\n          </Fade>\n        )}\n      </AlertDialogContext.Provider>\n    </Overlay>\n  );\n};\n\nexport default memo(forwardRef(AlertDialog));\n"]}