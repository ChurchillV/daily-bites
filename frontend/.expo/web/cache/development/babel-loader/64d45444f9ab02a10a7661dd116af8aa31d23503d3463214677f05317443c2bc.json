{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"_current\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef, memo } from 'react';\nimport Text from \"../../primitives/Text\";\nimport { BreadcrumbItemContext } from \"./Context\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps/usePropsResolution\";\nvar BreadcrumbText = function BreadcrumbText(props, ref) {\n  var _React$useContext = React.useContext(BreadcrumbItemContext),\n    isCurrent = _React$useContext.isCurrent;\n  var _usePropsResolution = usePropsResolution('BreadcrumbText', props),\n    children = _usePropsResolution.children,\n    _current = _usePropsResolution._current,\n    resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded);\n  return React.createElement(Text, _extends({\n    ref: ref\n  }, isCurrent && _current, resolvedProps), children);\n};\nexport default memo(forwardRef(BreadcrumbText));","map":{"version":3,"names":["React","forwardRef","memo","Text","BreadcrumbItemContext","usePropsResolution","BreadcrumbText","props","ref","_React$useContext","useContext","isCurrent","_usePropsResolution","children","_current","resolvedProps","_objectWithoutProperties","_excluded","createElement","_extends"],"sources":["C:\\Users\\vinch\\OneDrive\\Desktop\\daily_bites\\frontend\\node_modules\\native-base\\lib\\module\\components\\composites\\Breadcrumb\\BreadcrumbText.tsx"],"sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport Text from '../../primitives/Text';\nimport type { IBreadcrumbItemContext, IBreadcrumbTextProps } from './types';\nimport { BreadcrumbItemContext } from './Context';\nimport { usePropsResolution } from '../../../hooks/useThemeProps/usePropsResolution';\n\n// Add breadcrumbText as child of breadcrumbItem for implementaion of isCurrent prop\nconst BreadcrumbText = (props: IBreadcrumbTextProps, ref?: any) => {\n  const { isCurrent }: IBreadcrumbItemContext = React.useContext(\n    BreadcrumbItemContext\n  );\n  let { children, _current, ...resolvedProps } = usePropsResolution(\n    'BreadcrumbText',\n    props\n  );\n  return (\n    <Text ref={ref} {...(isCurrent && _current)} {...resolvedProps}>\n      {children}\n    </Text>\n  );\n};\n\nexport default memo(forwardRef(BreadcrumbText));\n"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,IAA5B,QAAwC,OAAxC;AACA,OAAOC,IAAP;AAEA,SAASC,qBAAT;AACA,SAASC,kBAAT;AAGA,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,KAAD,EAA8BC,GAA9B,EAA4C;EACjE,IAAAC,iBAAA,GAA8CT,KAAK,CAACU,UAAN,CAC5CN,qBAD4C,CAA9C;IAAQO,SAAA,GAAAF,iBAAA,CAAAE,SAAA;EAGR,IAAAC,mBAAA,GAA+CP,kBAAkB,CAC/D,gBAD+D,EAE/DE,KAF+D,CAAjE;IAAMM,QAAF,GAAAD,mBAAA,CAAEC,QAAF;IAAYC,QAAZ,GAAAF,mBAAA,CAAYE,QAAZ;IAAyBC,aAAA,GAAAC,wBAAA,CAAAJ,mBAAA,EAAAK,SAAA;EAI7B,OACEjB,KAAA,CAAAkB,aAAA,CAACf,IAAD,EAAAgB,QAAA;IAAMX,GAAG,EAAEA;EAAX,GAAqBG,SAAS,IAAIG,QAAlC,EAAiDC,aAAjD,GACGF,QADH,CADF;AAKD,CAbD;AAeA,eAAeX,IAAI,CAACD,UAAU,CAACK,cAAD,CAAX,CAAnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}