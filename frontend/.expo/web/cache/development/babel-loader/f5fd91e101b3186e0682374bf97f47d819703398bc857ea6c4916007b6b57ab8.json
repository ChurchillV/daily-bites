{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"],\n  _excluded2 = [\"_hover\", \"_expanded\", \"_disabled\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Box from \"../../primitives/Box\";\nimport { AccordionItemContext } from \"./Context\";\nimport { useThemeProps } from \"../../../hooks\";\nimport { mergeRefs } from \"../../../utils\";\nimport { useHover } from '@react-native-aria/interactions';\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar AccordionSummary = function AccordionSummary(_ref2, ref) {\n  var children = _ref2.children,\n    props = _objectWithoutProperties(_ref2, _excluded);\n  var _React$useContext = React.useContext(AccordionItemContext),\n    index = _React$useContext.index,\n    isOpen = _React$useContext.isOpen,\n    isDisabled = _React$useContext.isDisabled,\n    onOpen = _React$useContext.onOpen,\n    onClose = _React$useContext.onClose;\n  var _useThemeProps = useThemeProps('AccordionSummary', props),\n    _hover = _useThemeProps._hover,\n    _expanded = _useThemeProps._expanded,\n    _disabled = _useThemeProps._disabled,\n    themedProps = _objectWithoutProperties(_useThemeProps, _excluded2);\n  var pressHandler = function pressHandler() {\n    isOpen ? onClose && onClose() : onOpen && onOpen();\n  };\n  var _ref = React.useRef(null);\n  var _useHover = useHover({}, _ref),\n    isHovered = _useHover.isHovered;\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(TouchableOpacity, {\n    activeOpacity: 0.2,\n    disabled: isDisabled,\n    onPress: pressHandler,\n    accessible: true,\n    accessibilityRole: \"checkbox\",\n    ref: mergeRefs([ref, _ref])\n  }, React.createElement(Box, _extends({\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  }, themedProps, isHovered && _hover, isOpen && _expanded, isDisabled && _disabled, !index && {\n    borderTopColor: 'transparent'\n  }, Platform.OS === 'web' ? {\n    disabled: isDisabled,\n    cursor: isDisabled ? 'not-allowed' : 'auto'\n  } : {}), children));\n};\nexport default React.memo(React.forwardRef(AccordionSummary));","map":{"version":3,"names":["React","TouchableOpacity","Platform","Box","AccordionItemContext","useThemeProps","mergeRefs","useHover","useHasResponsiveProps","AccordionSummary","_ref2","ref","children","props","_objectWithoutProperties","_excluded","_React$useContext","useContext","index","isOpen","isDisabled","onOpen","onClose","_useThemeProps","_hover","_expanded","_disabled","themedProps","_excluded2","pressHandler","_ref","useRef","_useHover","isHovered","createElement","activeOpacity","disabled","onPress","accessible","accessibilityRole","_extends","display","flexDirection","justifyContent","alignItems","borderTopColor","OS","cursor","memo","forwardRef"],"sources":["C:\\Users\\H P\\Desktop\\Daily Bite\\daily-bites\\frontend\\node_modules\\native-base\\lib\\module\\components\\composites\\Accordion\\AccordionSummary.tsx"],"sourcesContent":["import React from 'react';\nimport { TouchableOpacity, Platform } from 'react-native';\nimport Box from '../../primitives/Box';\nimport type {\n  IAccordionSummaryProps,\n  IAccordionItemContextProps,\n} from './types';\nimport { AccordionItemContext } from './Context';\nimport { useThemeProps } from '../../../hooks';\nimport { mergeRefs } from '../../../utils';\nimport { useHover } from '@react-native-aria/interactions';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst AccordionSummary = (\n  { children, ...props }: IAccordionSummaryProps,\n  ref: any\n) => {\n  const {\n    index,\n    isOpen,\n    isDisabled,\n    onOpen,\n    onClose,\n  }: IAccordionItemContextProps = React.useContext(AccordionItemContext);\n\n  const { _hover, _expanded, _disabled, ...themedProps } = useThemeProps(\n    'AccordionSummary',\n    props\n  );\n  const pressHandler = () => {\n    isOpen ? onClose && onClose() : onOpen && onOpen();\n  };\n\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <TouchableOpacity\n      activeOpacity={0.2}\n      disabled={isDisabled}\n      onPress={pressHandler}\n      accessible\n      accessibilityRole=\"checkbox\"\n      ref={mergeRefs([ref, _ref])}\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        {...themedProps}\n        {...(isHovered && _hover)}\n        {...(isOpen && _expanded)}\n        {...(isDisabled && _disabled)}\n        {...(!index && { borderTopColor: 'transparent' })}\n        {...(Platform.OS === 'web'\n          ? {\n              disabled: isDisabled,\n              cursor: isDisabled ? 'not-allowed' : 'auto',\n            }\n          : {})}\n      >\n        {children}\n      </Box>\n    </TouchableOpacity>\n  );\n};\n\nexport default React.memo(React.forwardRef(AccordionSummary));\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAAA,OAAAC,gBAAA;AAAA,OAAAC,QAAA;AAEA,OAAOC,GAAP;AAKA,SAASC,oBAAT;AACA,SAASC,aAAT;AACA,SAASC,SAAT;AACA,SAASC,QAAT,QAAyB,iCAAzB;AACA,SAASC,qBAAT;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAAC,KAAA,EAEpBC,GAFuB,EAGpB;EAAA,IAFDC,QAAF,GAAAF,KAAA,CAAEE,QAAF;IAAeC,KAAA,GAAAC,wBAAA,CAAAJ,KAAA,EAAAK,SAAA;EAGf,IAAAC,iBAAA,GAMgChB,KAAK,CAACiB,UAAN,CAAiBb,oBAAjB,CANhC;IACEc,KADI,GAAAF,iBAAA,CACJE,KADI;IAEJC,MAFI,GAAAH,iBAAA,CAEJG,MAFI;IAGJC,UAHI,GAAAJ,iBAAA,CAGJI,UAHI;IAIJC,MAJI,GAAAL,iBAAA,CAIJK,MAJI;IAKJC,OAAA,GAAAN,iBAAA,CAAAM,OAAA;EAGF,IAAAC,cAAA,GAAyDlB,aAAa,CACpE,kBADoE,EAEpEQ,KAFoE,CAAtE;IAAQW,MAAF,GAAAD,cAAA,CAAEC,MAAF;IAAUC,SAAV,GAAAF,cAAA,CAAUE,SAAV;IAAqBC,SAArB,GAAAH,cAAA,CAAqBG,SAArB;IAAmCC,WAAA,GAAAb,wBAAA,CAAAS,cAAA,EAAAK,UAAA;EAIzC,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzBV,MAAM,GAAGG,OAAO,IAAIA,OAAO,EAArB,GAA0BD,MAAM,IAAIA,MAAM,EAAhD;EACD,CAFD;EAIA,IAAMS,IAAI,GAAG9B,KAAK,CAAC+B,MAAN,CAAa,IAAb,CAAb;EACA,IAAAC,SAAA,GAAsBzB,QAAQ,CAAC,EAAD,EAAKuB,IAAL,CAA9B;IAAQG,SAAA,GAAAD,SAAA,CAAAC,SAAA;EAER,IAAIzB,qBAAqB,CAACK,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EACD,OACEb,KAAA,CAAAkC,aAAA,CAACjC,gBAAD;IACEkC,aAAa,EAAE,GADjB;IAEEC,QAAQ,EAAEhB,UAFZ;IAGEiB,OAAO,EAAER,YAHX;IAIES,UAAU,MAJZ;IAKEC,iBAAiB,EAAC,UALpB;IAME5B,GAAG,EAAEL,SAAS,CAAC,CAACK,GAAD,EAAMmB,IAAN,CAAD;EANhB,GAQE9B,KAAA,CAAAkC,aAAA,CAAC/B,GAAD,EAAAqC,QAAA;IACEC,OAAO,EAAC,MADV;IAEEC,aAAa,EAAC,KAFhB;IAGEC,cAAc,EAAC,eAHjB;IAIEC,UAAU,EAAC;EAJb,GAKMjB,WALN,EAMOM,SAAS,IAAIT,MANpB,EAOOL,MAAM,IAAIM,SAPjB,EAQOL,UAAU,IAAIM,SARrB,EASO,CAACR,KAAD,IAAU;IAAE2B,cAAc,EAAE;EAAlB,CATjB,EAUO3C,QAAQ,CAAC4C,EAAT,KAAgB,KAAhB,GACD;IACEV,QAAQ,EAAEhB,UADZ;IAEE2B,MAAM,EAAE3B,UAAU,GAAG,aAAH,GAAmB;EAFvC,CADC,GAKD,EAfN,GAiBGR,QAjBH,CARF,CADF;AA8BD,CAxDD;AA0DA,eAAeZ,KAAK,CAACgD,IAAN,CAAWhD,KAAK,CAACiD,UAAN,CAAiBxC,gBAAjB,CAAX,CAAf"},"metadata":{},"sourceType":"module","externalDependencies":[]}