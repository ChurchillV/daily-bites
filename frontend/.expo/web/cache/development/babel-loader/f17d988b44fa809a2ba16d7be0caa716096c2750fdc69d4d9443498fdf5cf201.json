{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"disabled\", \"isDisabled\", \"isInvalid\", \"isChecked\", \"defaultIsChecked\", \"accessibilityLabel\", \"accessibilityHint\", \"onToggle\", \"value\", \"onValueChange\", \"isHovered\"],\n  _excluded2 = [\"onTrackColor\", \"offTrackColor\", \"onThumbColor\", \"offThumbColor\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { memo, forwardRef } from 'react';\nimport { useToggleState } from '@react-stately/toggle';\nimport RNSwitch from \"react-native-web/dist/exports/Switch\";\nimport isNil from 'lodash.isnil';\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { useToken } from \"../../../hooks\";\nimport { makeStyledComponent } from \"../../../utils/styled\";\nimport { mergeRefs } from \"../../../utils\";\nimport { useHover } from '@react-native-aria/interactions';\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nimport { useFormControlContext } from \"../../composites/FormControl\";\nimport { combineContextAndProps } from \"../../../utils\";\nvar StyledNBSwitch = makeStyledComponent(RNSwitch);\nvar Switch = function Switch(_ref2, ref) {\n  var disabled = _ref2.disabled,\n    isDisabled = _ref2.isDisabled,\n    isInvalid = _ref2.isInvalid,\n    isChecked = _ref2.isChecked,\n    defaultIsChecked = _ref2.defaultIsChecked,\n    accessibilityLabel = _ref2.accessibilityLabel,\n    accessibilityHint = _ref2.accessibilityHint,\n    onToggle = _ref2.onToggle,\n    value = _ref2.value,\n    _onValueChange = _ref2.onValueChange,\n    isHoveredProp = _ref2.isHovered,\n    props = _objectWithoutProperties(_ref2, _excluded);\n  var formControlContext = useFormControlContext();\n  var combinedProps = combineContextAndProps(formControlContext, props);\n  var state = useToggleState({\n    defaultSelected: !isNil(defaultIsChecked) ? defaultIsChecked : false\n  });\n  var checked = !isNil(isChecked) ? isChecked : state.isSelected;\n  var _ref = React.useRef(null);\n  var _useHover = useHover({}, _ref),\n    isHovered = _useHover.isHovered;\n  var _usePropsResolution = usePropsResolution('Switch', props, {\n      isHovered: isHoveredProp || isHovered,\n      isDisabled: disabled || isDisabled || combinedProps.isDisabled,\n      isInvalid: isInvalid || combinedProps.isInvalid,\n      isChecked: checked\n    }),\n    _onTrackColor = _usePropsResolution.onTrackColor,\n    _offTrackColor = _usePropsResolution.offTrackColor,\n    _onThumbColor = _usePropsResolution.onThumbColor,\n    _offThumbColor = _usePropsResolution.offThumbColor,\n    resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n  var onTrackColor = useToken('colors', _onTrackColor);\n  var offTrackColor = useToken('colors', _offTrackColor);\n  var onThumbColor = useToken('colors', _onThumbColor);\n  var offThumbColor = useToken('colors', _offThumbColor);\n  if (useHasResponsiveProps(_objectSpread(_objectSpread({}, props), {}, {\n    isDisabled: isDisabled,\n    isInvalid: isInvalid,\n    isChecked: isChecked,\n    defaultIsChecked: defaultIsChecked,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityHint: accessibilityHint\n  }))) {\n    return null;\n  }\n  return React.createElement(StyledNBSwitch, _extends({\n    accessibilityLabel: accessibilityLabel,\n    accessibilityHint: accessibilityHint,\n    trackColor: {\n      false: offTrackColor,\n      true: onTrackColor\n    },\n    thumbColor: checked ? onThumbColor : offThumbColor,\n    activeThumbColor: onThumbColor,\n    ios_backgroundColor: offTrackColor\n  }, resolvedProps, {\n    disabled: disabled || isDisabled || combinedProps.isDisabled,\n    onValueChange: function onValueChange(val) {\n      _onValueChange && _onValueChange(val);\n      onToggle ? onToggle(val) : state.toggle();\n    },\n    value: value || checked,\n    ref: mergeRefs([ref, _ref])\n  }));\n};\nexport default memo(forwardRef(Switch));","map":{"version":3,"names":["React","memo","forwardRef","useToggleState","RNSwitch","isNil","usePropsResolution","useToken","makeStyledComponent","mergeRefs","useHover","useHasResponsiveProps","useFormControlContext","combineContextAndProps","StyledNBSwitch","Switch","_ref2","ref","disabled","isDisabled","isInvalid","isChecked","defaultIsChecked","accessibilityLabel","accessibilityHint","onToggle","value","onValueChange","isHoveredProp","isHovered","props","_objectWithoutProperties","_excluded","formControlContext","combinedProps","state","defaultSelected","checked","isSelected","_ref","useRef","_useHover","_usePropsResolution","_onTrackColor","onTrackColor","_offTrackColor","offTrackColor","_onThumbColor","onThumbColor","_offThumbColor","offThumbColor","resolvedProps","_excluded2","_objectSpread","createElement","_extends","trackColor","false","true","thumbColor","activeThumbColor","ios_backgroundColor","val","toggle"],"sources":["C:\\Users\\vinch\\OneDrive\\Desktop\\daily_bites\\frontend\\node_modules\\native-base\\lib\\module\\components\\primitives\\Switch\\index.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { useToggleState } from '@react-stately/toggle';\nimport { Switch as RNSwitch } from 'react-native';\nimport isNil from 'lodash.isnil';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useToken } from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport type { ISwitchProps } from './types';\nimport { mergeRefs } from '../../../utils';\nimport { useHover } from '@react-native-aria/interactions';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { useFormControlContext } from '../../composites/FormControl';\nimport { combineContextAndProps } from '../../../utils';\n\nconst StyledNBSwitch = makeStyledComponent(RNSwitch);\n\n// TODO: Needs proper refactor\nconst Switch = (\n  {\n    disabled,\n    isDisabled,\n    isInvalid,\n    isChecked,\n    defaultIsChecked,\n    accessibilityLabel,\n    accessibilityHint,\n    onToggle,\n    value,\n    onValueChange,\n    isHovered: isHoveredProp,\n    ...props\n  }: ISwitchProps,\n  ref: any\n) => {\n  const formControlContext = useFormControlContext();\n\n  const combinedProps = combineContextAndProps(formControlContext, props);\n\n  const state = useToggleState({\n    defaultSelected: !isNil(defaultIsChecked) ? defaultIsChecked : false,\n  });\n  const checked = !isNil(isChecked) ? isChecked : state.isSelected;\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n\n  const {\n    onTrackColor: _onTrackColor,\n    offTrackColor: _offTrackColor,\n    onThumbColor: _onThumbColor,\n    offThumbColor: _offThumbColor,\n    ...resolvedProps\n  } = usePropsResolution('Switch', props, {\n    isHovered: isHoveredProp || isHovered,\n    isDisabled: disabled || isDisabled || combinedProps.isDisabled,\n    isInvalid: isInvalid || combinedProps.isInvalid,\n    isChecked: checked,\n  });\n\n  const onTrackColor = useToken('colors', _onTrackColor);\n  const offTrackColor = useToken('colors', _offTrackColor);\n  const onThumbColor = useToken('colors', _onThumbColor);\n  const offThumbColor = useToken('colors', _offThumbColor);\n\n  //TODO: refactor for responsive prop\n  if (\n    useHasResponsiveProps({\n      ...props,\n      isDisabled,\n      isInvalid,\n      isChecked,\n      defaultIsChecked,\n      accessibilityLabel,\n      accessibilityHint,\n    })\n  ) {\n    return null;\n  }\n  return (\n    <StyledNBSwitch\n      accessibilityLabel={accessibilityLabel}\n      accessibilityHint={accessibilityHint}\n      trackColor={{ false: offTrackColor, true: onTrackColor }}\n      thumbColor={checked ? onThumbColor : offThumbColor}\n      activeThumbColor={onThumbColor} // react-native-web prop for active thumbColor\n      ios_backgroundColor={offTrackColor}\n      {...resolvedProps}\n      disabled={disabled || isDisabled || combinedProps.isDisabled}\n      onValueChange={(val: boolean) => {\n        onValueChange && onValueChange(val);\n        onToggle ? onToggle(val) : state.toggle();\n      }}\n      value={value || checked}\n      ref={mergeRefs([ref, _ref])}\n    />\n  );\n};\n\nexport default memo(forwardRef(Switch));\nexport type { ISwitchProps };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}