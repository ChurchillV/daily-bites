{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { memo, forwardRef } from 'react';\nimport StackMain from \"./Stack\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar HStack = function HStack(props, ref) {\n  var resolvedProps = usePropsResolution('HStack', props);\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(StackMain, _extends({\n    ref: ref,\n    direction: \"row\"\n  }, resolvedProps));\n};\nexport default memo(forwardRef(HStack));","map":{"version":3,"names":["React","memo","forwardRef","StackMain","usePropsResolution","useHasResponsiveProps","HStack","props","ref","resolvedProps","createElement","_extends","direction"],"sources":["C:\\Users\\H P\\Desktop\\Daily Bite\\daily-bites\\frontend\\node_modules\\native-base\\lib\\module\\components\\primitives\\Stack\\HStack.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport StackMain, { InterfaceStackProps } from './Stack';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type {\n  CustomProps,\n  ResponsiveValue,\n  // ThemeComponentSizeType,\n} from '../../types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nexport interface InterfaceHStackProps extends InterfaceStackProps {\n  /**\n   * The direction of the Stack Items.\n   * @default row\n   */\n  direction?: ResponsiveValue<\n    'column' | 'row' | 'column-reverse' | 'row-reverse'\n  >;\n}\n\nexport type IHStackProps = InterfaceHStackProps & CustomProps<'HStack'>;\n\nconst HStack = (props: IHStackProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('HStack', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <StackMain ref={ref} direction=\"row\" {...resolvedProps} />;\n};\n\nexport default memo(forwardRef(HStack));\n"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,OAAOC,SAAP;AACA,SAASC,kBAAT;AAMA,SAASC,qBAAT;AAaA,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAIC,KAAD,EAAsBC,GAAtB,EAAoC;EACjD,IAAMC,aAAa,GAAGL,kBAAkB,CAAC,QAAD,EAAWG,KAAX,CAAxC;EAEA,IAAIF,qBAAqB,CAACE,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EACD,OAAOP,KAAA,CAAAU,aAAA,CAACP,SAAD,EAAAQ,QAAA;IAAWH,GAAG,EAAEA,GAAhB;IAAqBI,SAAS,EAAC;EAA/B,GAAyCH,aAAzC,EAAP;AACD,CAPD;AASA,eAAeR,IAAI,CAACC,UAAU,CAACI,MAAD,CAAX,CAAnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}