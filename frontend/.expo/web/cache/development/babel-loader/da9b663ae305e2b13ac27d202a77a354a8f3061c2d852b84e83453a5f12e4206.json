{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useCheckboxGroup as useCheckboxGroupWeb } from '@react-aria/checkbox';\nimport { mapDomPropsToRN } from '@react-native-aria/utils';\nexport function useCheckboxGroup(props, state) {\n  var params = useCheckboxGroupWeb(props, state);\n  return {\n    labelProps: _objectSpread(_objectSpread({}, params.labelProps), mapDomPropsToRN(params.labelProps)),\n    groupProps: _objectSpread(_objectSpread({}, params.groupProps), mapDomPropsToRN(params.groupProps))\n  };\n}","map":{"version":3,"names":["useCheckboxGroup","useCheckboxGroupWeb","mapDomPropsToRN","props","state","params","labelProps","_objectSpread","groupProps"],"sources":["C:\\Users\\vinch\\OneDrive\\Desktop\\daily_bites\\frontend\\node_modules\\@react-native-aria\\checkbox\\lib\\module\\useCheckboxGroup.web.ts"],"sourcesContent":["import { useCheckboxGroup as useCheckboxGroupWeb } from '@react-aria/checkbox';\nimport { AriaCheckboxGroupProps } from '@react-types/checkbox';\nimport { CheckboxGroupState } from '@react-stately/checkbox';\nimport { mapDomPropsToRN } from '@react-native-aria/utils';\n\ninterface CheckboxGroupAria {\n  /** Props for the checkbox group wrapper element. */\n  groupProps: any;\n  /** Props for the checkbox group's visible label (if any). */\n  labelProps: any;\n}\n\n/**\n * Provides the behavior and accessibility implementation for a checkbox group component.\n * Checkbox groups allow users to select multiple items from a list of options.\n * @param props - Props for the checkbox group.\n * @param state - State for the checkbox group, as returned by `useCheckboxGroupState`.\n */\nexport function useCheckboxGroup(\n  props: AriaCheckboxGroupProps,\n  state: CheckboxGroupState\n): CheckboxGroupAria {\n  const params = useCheckboxGroupWeb(props, state);\n  return {\n    labelProps: {\n      ...params.labelProps,\n      ...mapDomPropsToRN(params.labelProps),\n    },\n    groupProps: {\n      ...params.groupProps,\n      ...mapDomPropsToRN(params.groupProps),\n    },\n  };\n}\n"],"mappings":";;;AAAA,SAASA,gBAAgB,IAAIC,mBAA7B,QAAwD,sBAAxD;AAGA,SAASC,eAAT,QAAgC,0BAAhC;AAeA,OAAO,SAASF,gBAATA,CACLG,KADK,EAELC,KAFK,EAGc;EACnB,IAAMC,MAAM,GAAGJ,mBAAmB,CAACE,KAAD,EAAQC,KAAR,CAAlC;EACA,OAAO;IACLE,UAAU,EAAAC,aAAA,CAAAA,aAAA,KACLF,MAAM,CAACC,UADA,GAEPJ,eAAe,CAACG,MAAM,CAACC,UAAR,EAHf;IAKLE,UAAU,EAAAD,aAAA,CAAAA,aAAA,KACLF,MAAM,CAACG,UADA,GAEPN,eAAe,CAACG,MAAM,CAACG,UAAR;EAPf,CAAP;AAUD"},"metadata":{},"sourceType":"module","externalDependencies":[]}