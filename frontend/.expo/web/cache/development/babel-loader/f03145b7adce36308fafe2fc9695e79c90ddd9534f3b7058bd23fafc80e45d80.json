{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"];\nimport React from 'react';\nfunction createContext(rootComponentName) {\n  var Context = React.createContext(null);\n  function Provider(props) {\n    var children = props.children,\n      providerProps = _objectWithoutProperties(props, _excluded);\n    var value = React.useMemo(function () {\n      return providerProps;\n    }, Object.values(providerProps));\n    return React.createElement(Context.Provider, {\n      value: value\n    }, children);\n  }\n  function useContext(consumerName) {\n    var context = React.useContext(Context);\n    if (context === null) {\n      throw new Error(\"`\".concat(consumerName, \"` must be used within `\").concat(rootComponentName, \"`\"));\n    }\n    return context;\n  }\n  Provider.displayName = rootComponentName + 'Provider';\n  return [Provider, useContext];\n}\nexport { createContext };","map":{"version":3,"names":["React","createContext","rootComponentName","Context","Provider","props","children","providerProps","_objectWithoutProperties","_excluded","value","useMemo","Object","values","createElement","useContext","consumerName","context","Error","concat","displayName"],"sources":["C:\\Users\\vinch\\OneDrive\\Desktop\\daily_bites\\frontend\\node_modules\\native-base\\lib\\module\\utils\\createContext.tsx"],"sourcesContent":["import React from 'react';\n\nfunction createContext<ContextValueType extends object>(\n  rootComponentName: string\n) {\n  const Context = React.createContext<ContextValueType>(null as any);\n\n  function Provider(props: ContextValueType & { children: React.ReactNode }) {\n    const { children, ...providerProps } = props;\n    // Only re-memoize when prop values change\n    const value = React.useMemo(\n      () => providerProps,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      Object.values(providerProps)\n    ) as ContextValueType;\n    return <Context.Provider value={value}>{children}</Context.Provider>;\n  }\n\n  function useContext(consumerName: string) {\n    const context = React.useContext(Context);\n    if (context === null) {\n      throw new Error(\n        `\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``\n      );\n    }\n    return context;\n  }\n\n  Provider.displayName = rootComponentName + 'Provider';\n  return [Provider, useContext] as const;\n}\n\nexport { createContext };\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,aAATA,CACEC,iBADF,EAEE;EACA,IAAMC,OAAO,GAAGH,KAAK,CAACC,aAAN,CAAsC,IAAtC,CAAhB;EAEA,SAASG,QAATA,CAAkBC,KAAlB,EAA2E;IACzE,IAAQC,QAAF,GAAiCD,KAAvC,CAAQC,QAAF;MAAeC,aAAA,GAAAC,wBAAA,CAAkBH,KAAvC,EAAAI,SAAA;IAEA,IAAMC,KAAK,GAAGV,KAAK,CAACW,OAAN,CACZ;MAAA,OAAMJ,aADM;IAAA,GAGZK,MAAM,CAACC,MAAP,CAAcN,aAAd,CAHY,CAAd;IAKA,OAAOP,KAAA,CAAAc,aAAA,CAACX,OAAD,CAASC,QAAT;MAAkBM,KAAK,EAAEA;IAAzB,GAAiCJ,QAAjC,CAAP;EACD;EAED,SAASS,UAATA,CAAoBC,YAApB,EAA0C;IACxC,IAAMC,OAAO,GAAGjB,KAAK,CAACe,UAAN,CAAiBZ,OAAjB,CAAhB;IACA,IAAIc,OAAO,KAAK,IAAhB,EAAsB;MACpB,MAAM,IAAIC,KAAJ,KAAAC,MAAA,CACCH,YADD,6BAAAG,MAAA,CACyCjB,iBADzC,OAAN;IAGD;IACD,OAAOe,OAAP;EACD;EAEDb,QAAQ,CAACgB,WAAT,GAAuBlB,iBAAiB,GAAG,UAA3C;EACA,OAAO,CAACE,QAAD,EAAWW,UAAX,CAAP;AACD;AAED,SAASd,aAAT"},"metadata":{},"sourceType":"module","externalDependencies":[]}