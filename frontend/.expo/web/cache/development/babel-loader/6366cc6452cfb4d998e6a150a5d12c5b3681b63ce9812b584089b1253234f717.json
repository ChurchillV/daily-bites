{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"],\n  _excluded2 = [\"focusable\", \"stroke\", \"color\", \"size\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { memo, forwardRef } from 'react';\nimport { useToken, usePropsResolution } from \"../../../hooks\";\nimport { makeStyledComponent } from \"../../../utils/styled\";\nimport { Svg, G } from \"./nbSvg\";\nimport { questionOutlineIconPath } from \"./Icons/questionIconPath\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar SVG = makeStyledComponent(Svg);\nvar SVGIcon = function SVGIcon(_ref, ref) {\n  var children = _ref.children,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _usePropsResolution = usePropsResolution('Icon', props),\n    focusable = _usePropsResolution.focusable,\n    stroke = _usePropsResolution.stroke,\n    color = _usePropsResolution.color,\n    size = _usePropsResolution.size,\n    resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n  var strokeHex = useToken('colors', stroke || '');\n  var colorHex = useToken('colors', color || '');\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(SVG, _extends({}, resolvedProps, {\n    size: size,\n    color: colorHex,\n    stroke: strokeHex,\n    focusable: focusable,\n    accessibilityRole: \"image\",\n    ref: ref\n  }), React.Children.count(children) > 0 ? React.createElement(G, null, React.Children.map(children, function (child, i) {\n    var _child$key;\n    return React.createElement(ChildPath, _extends({\n      key: (_child$key = child === null || child === void 0 ? void 0 : child.key) !== null && _child$key !== void 0 ? _child$key : i,\n      element: child\n    }, child === null || child === void 0 ? void 0 : child.props));\n  })) : questionOutlineIconPath);\n};\nvar ChildPath = function ChildPath(_ref2) {\n  var element = _ref2.element,\n    fill = _ref2.fill,\n    pathStroke = _ref2.stroke;\n  var pathStrokeColor = useToken('colors', pathStroke || '');\n  var fillColor = useToken('colors', fill || '');\n  if (!element) {\n    return null;\n  }\n  return React.cloneElement(element, {\n    fill: fillColor ? fillColor : 'currentColor',\n    stroke: pathStrokeColor\n  });\n};\nexport default memo(forwardRef(SVGIcon));","map":{"version":3,"names":["React","memo","forwardRef","useToken","usePropsResolution","makeStyledComponent","Svg","G","questionOutlineIconPath","useHasResponsiveProps","SVG","SVGIcon","_ref","ref","children","props","_objectWithoutProperties","_excluded","_usePropsResolution","focusable","stroke","color","size","resolvedProps","_excluded2","strokeHex","colorHex","createElement","_extends","accessibilityRole","Children","count","map","child","i","_child$key","ChildPath","key","element","_ref2","fill","pathStroke","pathStrokeColor","fillColor","cloneElement"],"sources":["C:\\Users\\vinch\\OneDrive\\Desktop\\daily_bites\\frontend\\node_modules\\native-base\\lib\\module\\components\\primitives\\Icon\\SVGIcon.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { useToken, usePropsResolution } from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { Svg, G } from './nbSvg';\nimport type { IIconProps } from './types';\nimport { questionOutlineIconPath } from './Icons/questionIconPath';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst SVG = makeStyledComponent(Svg);\n\nconst SVGIcon = ({ children, ...props }: IIconProps, ref: any) => {\n  const {\n    focusable,\n    stroke,\n    color,\n    size,\n    ...resolvedProps\n  } = usePropsResolution('Icon', props);\n  const strokeHex = useToken('colors', stroke || '');\n  const colorHex = useToken('colors', color || '');\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <SVG\n      {...resolvedProps}\n      // height={\n      //   newProps.size\n      //     ? parseInt(newProps.size, 10)\n      //     : parseInt(newProps.height, 10)\n      // }\n      // width={\n      //   newProps.size\n      //     ? parseInt(newProps.size, 10)\n      //     : parseInt(newProps.width, 10)\n      // }\n      size={size}\n      color={colorHex}\n      stroke={strokeHex}\n      focusable={focusable}\n      accessibilityRole=\"image\"\n      // style={style}\n      ref={ref}\n    >\n      {React.Children.count(children) > 0 ? (\n        <G>\n          {React.Children.map(children, (child, i) => (\n            <ChildPath\n              key={child?.key ?? i}\n              element={child}\n              {...child?.props}\n            />\n          ))}\n        </G>\n      ) : (\n        questionOutlineIconPath\n      )}\n    </SVG>\n  );\n};\nconst ChildPath = ({ element, fill, stroke: pathStroke }: any) => {\n  const pathStrokeColor = useToken('colors', pathStroke || '');\n  const fillColor = useToken('colors', fill || '');\n\n  if (!element) {\n    return null;\n  }\n\n  return React.cloneElement(element, {\n    fill: fillColor ? fillColor : 'currentColor',\n    stroke: pathStrokeColor,\n  });\n};\nexport default memo(forwardRef(SVGIcon));\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}