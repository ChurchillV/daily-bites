{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useTypeaheadReducer } from \"./reducer\";\nimport React, { useEffect } from 'react';\nimport * as stateChangeTypes from \"./types\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport { dropdownDefaultStateValues, getDefaultValue } from \"./utils\";\nfunction isControlledProp(props, key) {\n  return props[key] !== undefined;\n}\nexport function useTypeahead(props) {\n  var defaultValues = _objectSpread({}, dropdownDefaultStateValues);\n  defaultValues.isOpen = getDefaultValue(props, 'isOpen');\n  var _React$useReducer = React.useReducer(useTypeaheadReducer, defaultValues),\n    _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n    state = _React$useReducer2[0],\n    dispatch = _React$useReducer2[1];\n  var dispatchWithProps = function dispatchWithProps(object) {\n    dispatch(_objectSpread(_objectSpread({}, object), {}, {\n      props: props\n    }));\n  };\n  var inputValue = state.inputValue,\n    isOpen = state.isOpen;\n  var items = props.items,\n    onInputValueChange = props.onInputValueChange,\n    onSelectedItemChange = props.onSelectedItemChange,\n    selectedItem = props.selectedItem,\n    itemToString = props.itemToString;\n  var isControlled = isControlledProp(props, 'selectedItem');\n  useEffect(function () {\n    if (isControlled) {\n      dispatch({\n        type: stateChangeTypes.ControlledPropUpdatedSelectedItem,\n        inputValue: itemToString(selectedItem)\n      });\n    }\n  }, [selectedItem, isControlled, itemToString]);\n  var onChangeText = function onChangeText(text) {\n    onInputValueChange === null || onInputValueChange === void 0 ? void 0 : onInputValueChange({\n      inputValue: text\n    });\n    dispatchWithProps({\n      type: stateChangeTypes.InputChange,\n      inputValue: text\n    });\n  };\n  var handleItemSelect = function handleItemSelect(item, index) {\n    onSelectedItemChange === null || onSelectedItemChange === void 0 ? void 0 : onSelectedItemChange(item);\n    dispatchWithProps({\n      type: stateChangeTypes.ItemClick,\n      index: index\n    });\n    Keyboard.dismiss();\n  };\n  var getMenuItemProps = function getMenuItemProps(item, index) {\n    return {\n      onPress: function onPress() {\n        return handleItemSelect(item, index);\n      },\n      accessible: true,\n      accessiblityRole: 'menuitem'\n    };\n  };\n  var getMenuProps = function getMenuProps() {\n    return {\n      accessible: true,\n      accessibilityRole: 'menu',\n      accessibilityHint: \"Showing \".concat(items.length, \" records\")\n    };\n  };\n  var getToggleButtonProps = function getToggleButtonProps() {\n    return {\n      onPress: function onPress() {\n        dispatchWithProps({\n          type: stateChangeTypes.ToggleButtonClick\n        });\n      }\n    };\n  };\n  var getInputProps = function getInputProps(propInputVal, propOnchangeText) {\n    return {\n      onChangeText: propInputVal ? propOnchangeText : onChangeText,\n      value: propInputVal ? propInputVal : inputValue,\n      accessibilityRole: 'combobox',\n      accessibilityLabel: 'Typeahead input',\n      accessibilityState: {\n        expanded: isOpen\n      }\n    };\n  };\n  return {\n    getInputProps: getInputProps,\n    getMenuItemProps: getMenuItemProps,\n    getMenuProps: getMenuProps,\n    getToggleButtonProps: getToggleButtonProps,\n    isOpen: isOpen\n  };\n}","map":{"version":3,"names":["useTypeaheadReducer","React","useEffect","stateChangeTypes","Keyboard","dropdownDefaultStateValues","getDefaultValue","isControlledProp","props","key","undefined","useTypeahead","defaultValues","_objectSpread","isOpen","_React$useReducer","useReducer","_React$useReducer2","_slicedToArray","state","dispatch","dispatchWithProps","object","inputValue","items","onInputValueChange","onSelectedItemChange","selectedItem","itemToString","isControlled","type","ControlledPropUpdatedSelectedItem","onChangeText","text","InputChange","handleItemSelect","item","index","ItemClick","dismiss","getMenuItemProps","onPress","accessible","accessiblityRole","getMenuProps","accessibilityRole","accessibilityHint","concat","length","getToggleButtonProps","ToggleButtonClick","getInputProps","propInputVal","propOnchangeText","value","accessibilityLabel","accessibilityState","expanded"],"sources":["C:\\Users\\H P\\Desktop\\Daily Bite\\daily-bites\\frontend\\node_modules\\native-base\\lib\\module\\components\\composites\\Typeahead\\useTypeahead\\useTypeahead.ts"],"sourcesContent":["import { useTypeaheadReducer } from './reducer';\nimport React, { useEffect } from 'react';\nimport * as stateChangeTypes from './types';\nimport type { AccessibilityRole } from 'react-native';\nimport { Keyboard } from 'react-native';\nimport { dropdownDefaultStateValues, getDefaultValue } from './utils';\n\nfunction isControlledProp(props: any, key: string) {\n  return props[key] !== undefined;\n}\n\nimport type { IUseTypeaheadProps } from './types';\n\nexport function useTypeahead(props: IUseTypeaheadProps) {\n  let defaultValues = { ...dropdownDefaultStateValues };\n  defaultValues.isOpen = getDefaultValue(props, 'isOpen');\n\n  const [state, dispatch] = React.useReducer(\n    useTypeaheadReducer,\n    defaultValues\n  );\n\n  const dispatchWithProps = (object: any) => {\n    dispatch({ ...object, props });\n  };\n\n  const { inputValue, isOpen } = state;\n\n  const {\n    items,\n    onInputValueChange,\n    onSelectedItemChange,\n    selectedItem,\n    itemToString,\n  } = props;\n\n  const isControlled = isControlledProp(props, 'selectedItem');\n\n  useEffect(() => {\n    if (isControlled) {\n      dispatch({\n        type: stateChangeTypes.ControlledPropUpdatedSelectedItem,\n        inputValue: itemToString(selectedItem),\n      });\n    }\n  }, [selectedItem, isControlled, itemToString]);\n\n  const onChangeText = (text: string) => {\n    onInputValueChange?.({ inputValue: text });\n    dispatchWithProps({ type: stateChangeTypes.InputChange, inputValue: text });\n  };\n\n  const handleItemSelect = (item: any, index: number) => {\n    onSelectedItemChange?.(item);\n    dispatchWithProps({ type: stateChangeTypes.ItemClick, index });\n    Keyboard.dismiss();\n  };\n\n  const getMenuItemProps = (item: any, index: number) => {\n    return {\n      onPress: () => handleItemSelect(item, index),\n      accessible: true,\n      accessiblityRole: 'menuitem' as AccessibilityRole,\n    };\n  };\n\n  const getMenuProps = () => {\n    return {\n      accessible: true,\n      accessibilityRole: 'menu' as AccessibilityRole,\n      accessibilityHint: `Showing ${items.length} records`,\n    };\n  };\n\n  const getToggleButtonProps = () => {\n    return {\n      onPress: () => {\n        dispatchWithProps({ type: stateChangeTypes.ToggleButtonClick });\n      },\n    };\n  };\n\n  const getInputProps = (propInputVal?: any, propOnchangeText?: any) => {\n    return {\n      onChangeText: propInputVal ? propOnchangeText : onChangeText,\n      value: propInputVal ? propInputVal : inputValue,\n      accessibilityRole: 'combobox' as AccessibilityRole,\n      accessibilityLabel: 'Typeahead input',\n      accessibilityState: {\n        expanded: isOpen,\n      },\n    };\n  };\n\n  return {\n    getInputProps,\n    getMenuItemProps,\n    getMenuProps,\n    getToggleButtonProps,\n    isOpen,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}