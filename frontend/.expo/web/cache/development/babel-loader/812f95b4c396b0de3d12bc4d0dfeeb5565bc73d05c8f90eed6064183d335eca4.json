{"ast":null,"code":"import useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport isNil from 'lodash.isnil';\nexport function useMediaQuery(query) {\n  var dims = useWindowDimensions();\n  var height = dims === null || dims === void 0 ? void 0 : dims.height;\n  var width = dims === null || dims === void 0 ? void 0 : dims.width;\n  return iterateQuery(query, height, width);\n}\nfunction queryResolver(query, width, height) {\n  for (var queryKey in query) {\n    if (!calculateQuery(queryKey, query[queryKey], height, width)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction iterateQuery(query, height, width) {\n  var queryResults = [];\n  if (Array.isArray(query)) {\n    query.forEach(function (subQuery) {\n      queryResults.push(queryResolver(subQuery, width, height));\n    });\n  } else {\n    queryResults.push(queryResolver(query, width, height));\n  }\n  return queryResults;\n}\nfunction calculateQuery(key, val, height, width) {\n  var retval;\n  if (isNil(width) || isNil(height) || isNil(val)) {\n    return;\n  }\n  switch (key) {\n    case 'maxWidth':\n      retval = !isNil(val) ? width <= val : undefined;\n      break;\n    case 'minWidth':\n      retval = !isNil(val) ? width >= val : undefined;\n      break;\n    case 'maxHeight':\n      retval = !isNil(val) ? height <= val : undefined;\n      break;\n    case 'minHeight':\n      retval = !isNil(val) ? height >= val : undefined;\n      break;\n    case 'orientation':\n      if (!isNil(val)) {\n        if (width > height) {\n          retval = val === 'landscape';\n        } else {\n          retval = val === 'portrait';\n        }\n      }\n      break;\n    default:\n      break;\n  }\n  return retval;\n}","map":{"version":3,"names":["isNil","useMediaQuery","query","dims","useWindowDimensions","height","width","iterateQuery","queryResolver","queryKey","calculateQuery","queryResults","Array","isArray","forEach","subQuery","push","key","val","retval","undefined"],"sources":["C:\\Users\\vinch\\OneDrive\\Desktop\\daily_bites\\frontend\\node_modules\\native-base\\lib\\module\\hooks\\useMediaQuery.ts"],"sourcesContent":["import { useWindowDimensions } from 'react-native';\nimport isNil from 'lodash.isnil';\n\ntype QueryKeys =\n  | 'maxWidth'\n  | 'minWidth'\n  | 'maxHeight'\n  | 'minHeight'\n  | 'orientation';\n\ntype SubQuery = {\n  [queryKey in QueryKeys]?: number | string;\n};\ntype Query = Array<SubQuery>;\n\nexport function useMediaQuery(query: SubQuery | Query) {\n  const dims = useWindowDimensions();\n  const height = dims?.height;\n  const width = dims?.width;\n\n  return iterateQuery(query, height, width);\n}\n\nfunction queryResolver(query: any, width?: number, height?: number) {\n  for (const queryKey in query) {\n    if (!calculateQuery(queryKey, query[queryKey], height, width)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction iterateQuery(\n  query: SubQuery | Query,\n  height?: number,\n  width?: number\n) {\n  const queryResults = [];\n  if (Array.isArray(query)) {\n    query.forEach((subQuery: SubQuery) => {\n      queryResults.push(queryResolver(subQuery, width, height));\n    });\n  } else {\n    queryResults.push(queryResolver(query, width, height));\n  }\n  return queryResults;\n}\n\nfunction calculateQuery(\n  key: string,\n  val?: number | string,\n  height?: number,\n  width?: number\n) {\n  let retval;\n  if (isNil(width) || isNil(height) || isNil(val)) {\n    return;\n  }\n  switch (key) {\n    case 'maxWidth':\n      retval = !isNil(val) ? width <= val : undefined;\n      break;\n    case 'minWidth':\n      retval = !isNil(val) ? width >= val : undefined;\n      break;\n    case 'maxHeight':\n      retval = !isNil(val) ? height <= val : undefined;\n      break;\n    case 'minHeight':\n      retval = !isNil(val) ? height >= val : undefined;\n      break;\n    case 'orientation':\n      if (!isNil(val)) {\n        if (width > height) {\n          retval = val === 'landscape';\n        } else {\n          retval = val === 'portrait';\n        }\n      }\n      break;\n    default:\n      break;\n  }\n  return retval;\n}\n"],"mappings":";AACA,OAAOA,KAAP,MAAkB,cAAlB;AAcA,OAAO,SAASC,aAATA,CAAuBC,KAAvB,EAAgD;EACrD,IAAMC,IAAI,GAAGC,mBAAmB,EAAhC;EACA,IAAMC,MAAM,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEE,MAArB;EACA,IAAMC,KAAK,GAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,KAApB;EAEA,OAAOC,YAAY,CAACL,KAAD,EAAQG,MAAR,EAAgBC,KAAhB,CAAnB;AACD;AAED,SAASE,aAATA,CAAuBN,KAAvB,EAAmCI,KAAnC,EAAmDD,MAAnD,EAAoE;EAClE,KAAK,IAAMI,QAAX,IAAuBP,KAAvB,EAA8B;IAC5B,IAAI,CAACQ,cAAc,CAACD,QAAD,EAAWP,KAAK,CAACO,QAAD,CAAhB,EAA4BJ,MAA5B,EAAoCC,KAApC,CAAnB,EAA+D;MAC7D,OAAO,KAAP;IACD;EACF;EACD,OAAO,IAAP;AACD;AAED,SAASC,YAATA,CACEL,KADF,EAEEG,MAFF,EAGEC,KAHF,EAIE;EACA,IAAMK,YAAY,GAAG,EAArB;EACA,IAAIC,KAAK,CAACC,OAAN,CAAcX,KAAd,CAAJ,EAA0B;IACxBA,KAAK,CAACY,OAAN,CAAe,UAAAC,QAAD,EAAwB;MACpCJ,YAAY,CAACK,IAAb,CAAkBR,aAAa,CAACO,QAAD,EAAWT,KAAX,EAAkBD,MAAlB,CAA/B;IACD,CAFD;EAGD,CAJD,MAIO;IACLM,YAAY,CAACK,IAAb,CAAkBR,aAAa,CAACN,KAAD,EAAQI,KAAR,EAAeD,MAAf,CAA/B;EACD;EACD,OAAOM,YAAP;AACD;AAED,SAASD,cAATA,CACEO,GADF,EAEEC,GAFF,EAGEb,MAHF,EAIEC,KAJF,EAKE;EACA,IAAIa,MAAJ;EACA,IAAInB,KAAK,CAACM,KAAD,CAAL,IAAgBN,KAAK,CAACK,MAAD,CAArB,IAAiCL,KAAK,CAACkB,GAAD,CAA1C,EAAiD;IAC/C;EACD;EACD,QAAQD,GAAR;IACE,KAAK,UAAL;MACEE,MAAM,GAAG,CAACnB,KAAK,CAACkB,GAAD,CAAN,GAAcZ,KAAK,IAAIY,GAAvB,GAA6BE,SAAtC;MACA;IACF,KAAK,UAAL;MACED,MAAM,GAAG,CAACnB,KAAK,CAACkB,GAAD,CAAN,GAAcZ,KAAK,IAAIY,GAAvB,GAA6BE,SAAtC;MACA;IACF,KAAK,WAAL;MACED,MAAM,GAAG,CAACnB,KAAK,CAACkB,GAAD,CAAN,GAAcb,MAAM,IAAIa,GAAxB,GAA8BE,SAAvC;MACA;IACF,KAAK,WAAL;MACED,MAAM,GAAG,CAACnB,KAAK,CAACkB,GAAD,CAAN,GAAcb,MAAM,IAAIa,GAAxB,GAA8BE,SAAvC;MACA;IACF,KAAK,aAAL;MACE,IAAI,CAACpB,KAAK,CAACkB,GAAD,CAAV,EAAiB;QACf,IAAIZ,KAAK,GAAGD,MAAZ,EAAoB;UAClBc,MAAM,GAAGD,GAAG,KAAK,WAAjB;QACD,CAFD,MAEO;UACLC,MAAM,GAAGD,GAAG,KAAK,UAAjB;QACD;MACF;MACD;IACF;MACE;EAvBJ;EAyBA,OAAOC,MAAP;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}