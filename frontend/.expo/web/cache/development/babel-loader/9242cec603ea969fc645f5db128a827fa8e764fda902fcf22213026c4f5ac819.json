{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"as\", \"size\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { memo, forwardRef } from 'react';\nimport { useToken, usePropsResolution } from \"../../../hooks\";\nimport SVGIcon from \"./SVGIcon\";\nimport { Factory } from \"../../../factory\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar Icon = function Icon(props, ref) {\n  var _usePropsResolution = usePropsResolution('Icon', props),\n    as = _usePropsResolution.as,\n    size = _usePropsResolution.size,\n    resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded);\n  var tokenizedFontSize = useToken('space', size);\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  if (!as) {\n    return React.createElement(SVGIcon, _extends({\n      size: size\n    }, resolvedProps, {\n      ref: ref\n    }));\n  }\n  var isJSX = React.isValidElement(as);\n  var StyledAs = Factory(isJSX ? function (resolvedProps) {\n    return React.cloneElement(as, _objectSpread(_objectSpread({}, resolvedProps), as.props));\n  } : as);\n  return React.createElement(StyledAs, _extends({}, resolvedProps, {\n    fontSize: tokenizedFontSize,\n    lineHeight: tokenizedFontSize,\n    size: size,\n    ref: ref\n  }));\n};\nexport default memo(forwardRef(Icon));","map":{"version":3,"names":["React","memo","forwardRef","useToken","usePropsResolution","SVGIcon","Factory","useHasResponsiveProps","Icon","props","ref","_usePropsResolution","as","size","resolvedProps","_objectWithoutProperties","_excluded","tokenizedFontSize","createElement","_extends","isJSX","isValidElement","StyledAs","cloneElement","_objectSpread","fontSize","lineHeight"],"sources":["C:\\Users\\H P\\Desktop\\Daily Bite\\daily-bites\\frontend\\node_modules\\native-base\\lib\\module\\components\\primitives\\Icon\\Icon.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { useToken, usePropsResolution } from '../../../hooks';\nimport type { IIconProps } from './types';\nimport SVGIcon from './SVGIcon';\nimport { Factory } from '../../../factory';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Icon = (props: IIconProps, ref?: any) => {\n  const { as, size, ...resolvedProps } = usePropsResolution('Icon', props);\n  const tokenizedFontSize = useToken('space', size);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  if (!as) {\n    return <SVGIcon size={size} {...resolvedProps} ref={ref} />;\n  }\n  const isJSX = React.isValidElement(as);\n  const StyledAs = Factory(\n    isJSX\n      ? (resolvedProps) =>\n          React.cloneElement(as, {\n            ...resolvedProps,\n            //@ts-ignore\n            ...as.props,\n          })\n      : as\n  );\n\n  return (\n    <StyledAs\n      {...resolvedProps}\n      fontSize={tokenizedFontSize}\n      lineHeight={tokenizedFontSize}\n      size={size}\n      ref={ref}\n    />\n  );\n};\n\nexport default memo(forwardRef(Icon));\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,SAASC,QAAT,EAAmBC,kBAAnB;AAEA,OAAOC,OAAP;AACA,SAASC,OAAT;AACA,SAASC,qBAAT;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAIC,KAAD,EAAoBC,GAApB,EAAkC;EAC7C,IAAAC,mBAAA,GAAuCP,kBAAkB,CAAC,MAAD,EAASK,KAAT,CAAzD;IAAQG,EAAF,GAAAD,mBAAA,CAAEC,EAAF;IAAMC,IAAN,GAAAF,mBAAA,CAAME,IAAN;IAAeC,aAAA,GAAAC,wBAAA,CAAAJ,mBAAA,EAAAK,SAAA;EACrB,IAAMC,iBAAiB,GAAGd,QAAQ,CAAC,OAAD,EAAUU,IAAV,CAAlC;EAEA,IAAIN,qBAAqB,CAACE,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EACD,IAAI,CAACG,EAAL,EAAS;IACP,OAAOZ,KAAA,CAAAkB,aAAA,CAACb,OAAD,EAAAc,QAAA;MAASN,IAAI,EAAEA;IAAf,GAAyBC,aAAzB;MAAwCJ,GAAG,EAAEA;IAA7C,GAAP;EACD;EACD,IAAMU,KAAK,GAAGpB,KAAK,CAACqB,cAAN,CAAqBT,EAArB,CAAd;EACA,IAAMU,QAAQ,GAAGhB,OAAO,CACtBc,KAAK,GACA,UAAAN,aAAD;IAAA,OACEd,KAAK,CAACuB,YAAN,CAAmBX,EAAnB,EAAAY,aAAA,CAAAA,aAAA,KACKV,aADkB,GAGlBF,EAAE,CAACH,KAAA,CAHR,CAFD;EAAA,IAODG,EARkB,CAAxB;EAWA,OACEZ,KAAA,CAAAkB,aAAA,CAACI,QAAD,EAAAH,QAAA,KACML,aADN;IAEEW,QAAQ,EAAER,iBAFZ;IAGES,UAAU,EAAET,iBAHd;IAIEJ,IAAI,EAAEA,IAJR;IAKEH,GAAG,EAAEA;EALP,GADF;AASD,CA/BD;AAiCA,eAAeT,IAAI,CAACC,UAAU,CAACM,IAAD,CAAX,CAAnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}