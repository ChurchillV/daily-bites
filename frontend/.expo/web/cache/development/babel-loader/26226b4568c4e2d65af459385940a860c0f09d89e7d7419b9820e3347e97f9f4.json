{"ast":null,"code":"import _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef } from 'react';\nimport RNSectionList from \"react-native-web/dist/exports/SectionList\";\nimport { usePropsResolution } from \"../../../hooks\";\nimport { makeStyledComponent } from \"../../../utils/styled\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar StyledSectionList = makeStyledComponent(RNSectionList);\nvar SectionListComponent = function SectionListComponent(props, ref) {\n  var _usePropsResolution = usePropsResolution('SectionList', props),\n    resolvedProps = Object.assign({}, (_objectDestructuringEmpty(_usePropsResolution), _usePropsResolution));\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(StyledSectionList, _extends({}, resolvedProps, {\n    ref: ref\n  }));\n};\nexport var SectionList = forwardRef(SectionListComponent);","map":{"version":3,"names":["React","forwardRef","RNSectionList","usePropsResolution","makeStyledComponent","useHasResponsiveProps","StyledSectionList","SectionListComponent","props","ref","_usePropsResolution","resolvedProps","Object","assign","_objectDestructuringEmpty","createElement","_extends","SectionList"],"sources":["C:\\Users\\H P\\Desktop\\Daily Bite\\daily-bites\\frontend\\node_modules\\native-base\\lib\\module\\components\\basic\\SectionList\\SectionList.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { SectionList as RNSectionList } from 'react-native';\nimport { usePropsResolution } from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport type { ISectionListProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledSectionList: any = makeStyledComponent(RNSectionList);\n\nconst SectionListComponent = <ItemT extends any, sectionT extends any>(\n  props: ISectionListProps<ItemT, sectionT>,\n  ref: any\n) => {\n  const { ...resolvedProps } = usePropsResolution('SectionList', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return <StyledSectionList {...resolvedProps} ref={ref} />;\n};\n\nexport const SectionList = forwardRef(SectionListComponent) as <\n  ItemT,\n  sectionT\n>(\n  props: ISectionListProps<ItemT, sectionT>,\n  ref: any\n) => any;\n"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAAA,OAAAC,aAAA;AAEA,SAASC,kBAAT;AACA,SAASC,mBAAT;AAEA,SAASC,qBAAT;AAEA,IAAMC,iBAAsB,GAAGF,mBAAmB,CAACF,aAAD,CAAlD;AAEA,IAAMK,oBAAoB,GAAG,SAAvBA,oBAAoBA,CACxBC,KAD2B,EAE3BC,GAF2B,EAGxB;EACH,IAAAC,mBAAA,GAA6BP,kBAAkB,CAAC,aAAD,EAAgBK,KAAhB,CAA/C;IAAWG,aAAA,GAAAC,MAAA,CAAAC,MAAA,MAAAC,yBAAA,CAAAJ,mBAAA,GAAAA,mBAAA;EAEX,IAAIL,qBAAqB,CAACG,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EAED,OAAOR,KAAA,CAAAe,aAAA,CAACT,iBAAD,EAAAU,QAAA,KAAuBL,aAAvB;IAAsCF,GAAG,EAAEA;EAA3C,GAAP;AACD,CAXD;AAaA,OAAO,IAAMQ,WAAW,GAAGhB,UAAU,CAACM,oBAAD,CAA9B"},"metadata":{},"sourceType":"module","externalDependencies":[]}