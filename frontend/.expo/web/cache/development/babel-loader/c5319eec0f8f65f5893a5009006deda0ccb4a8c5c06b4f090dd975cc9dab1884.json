{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"],\n  _excluded2 = [\"_scrollview\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { memo, forwardRef } from 'react';\nimport Box from \"../../primitives/Box\";\nimport { usePropsResolution } from \"../../../hooks\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nimport { ScrollView } from \"../../basic/ScrollView\";\nvar ModalBody = function ModalBody(_ref, ref) {\n  var children = _ref.children,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _usePropsResolution = usePropsResolution('ModalBody', props),\n    _scrollview = _usePropsResolution._scrollview,\n    resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(ScrollView, _scrollview, React.createElement(Box, _extends({}, resolvedProps, {\n    ref: ref\n  }), children));\n};\nexport default memo(forwardRef(ModalBody));","map":{"version":3,"names":["React","memo","forwardRef","Box","usePropsResolution","useHasResponsiveProps","ScrollView","ModalBody","_ref","ref","children","props","_objectWithoutProperties","_excluded","_usePropsResolution","_scrollview","resolvedProps","_excluded2","createElement","_extends"],"sources":["C:\\Users\\H P\\Desktop\\Daily Bite\\daily-bites\\frontend\\node_modules\\native-base\\lib\\module\\components\\composites\\Modal\\ModalBody.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box, { IBoxProps } from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { ScrollView, IScrollViewProps } from '../../basic/ScrollView';\n\nconst ModalBody = (\n  { children, ...props }: IBoxProps & { _scrollview?: IScrollViewProps },\n  ref?: any\n) => {\n  const { _scrollview, ...resolvedProps } = usePropsResolution(\n    'ModalBody',\n    props\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <ScrollView {..._scrollview}>\n      <Box {...resolvedProps} ref={ref}>\n        {children}\n      </Box>\n    </ScrollView>\n  );\n};\n\nexport default memo(forwardRef(ModalBody));\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,OAAOC,GAAP;AACA,SAASC,kBAAT;AACA,SAASC,qBAAT;AACA,SAASC,UAAT;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAAC,IAAA,EAEbC,GAFgB,EAGb;EAAA,IAFDC,QAAF,GAAAF,IAAA,CAAEE,QAAF;IAAeC,KAAA,GAAAC,wBAAA,CAAAJ,IAAA,EAAAK,SAAA;EAGf,IAAAC,mBAAA,GAA0CV,kBAAkB,CAC1D,WAD0D,EAE1DO,KAF0D,CAA5D;IAAQI,WAAF,GAAAD,mBAAA,CAAEC,WAAF;IAAkBC,aAAA,GAAAJ,wBAAA,CAAAE,mBAAA,EAAAG,UAAA;EAKxB,IAAIZ,qBAAqB,CAACM,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EACD,OACEX,KAAA,CAAAkB,aAAA,CAACZ,UAAD,EAAgBS,WAAhB,EACEf,KAAA,CAAAkB,aAAA,CAACf,GAAD,EAAAgB,QAAA,KAASH,aAAT;IAAwBP,GAAG,EAAEA;EAA7B,IACGC,QADH,CADF,CADF;AAOD,CAnBD;AAqBA,eAAeT,IAAI,CAACC,UAAU,CAACK,SAAD,CAAX,CAAnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}