{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Color from 'tinycolor2';\nimport { useToken } from \"./useToken\";\nimport { useAccessibleColors } from \"../core/color-mode/hooks\";\nimport { useNativeBaseConfig } from \"../core/NativeBaseContext\";\nexport function useContrastText(bg, color) {\n  var _useToken = useToken('colors', ['contrastThreshold', 'darkText', 'lightText', bg, color !== null && color !== void 0 ? color : '']),\n    _useToken2 = _slicedToArray(_useToken, 5),\n    contrastThreshold = _useToken2[0],\n    trueDarkText = _useToken2[1],\n    trueLightText = _useToken2[2],\n    trueBg = _useToken2[3],\n    trueColor = _useToken2[4];\n  var suppressColorAccessibilityWarning = useNativeBaseConfig('NativeBaseConfigProvider').config.suppressColorAccessibilityWarning;\n  var _useAccessibleColors = useAccessibleColors(),\n    _useAccessibleColors2 = _slicedToArray(_useAccessibleColors, 1),\n    accessibleColors = _useAccessibleColors2[0];\n  if (useNativeBaseConfig('NativeBaseConfigProvider').disableContrastText) {\n    return trueColor;\n  }\n  if (typeof bg !== 'string') {\n    return;\n  }\n  var _bg$split = bg.split('.'),\n    _bg$split2 = _slicedToArray(_bg$split, 2),\n    bgThemeColorVariant = _bg$split2[0],\n    bgShade = _bg$split2[1];\n  var textColor = !accessibleColors && bgThemeColorVariant && themeColorsThresholdShades[bgThemeColorVariant] ? getContrastThemeColor(bgThemeColorVariant, bgShade) : getAccessibleContrastColor(contrastThreshold, trueDarkText, trueLightText, trueBg, trueColor, bg, color, suppressColorAccessibilityWarning);\n  return textColor;\n}\nfunction getContrastThemeColor(bgThemeColorVariant, bgShade) {\n  var shadeThreshold = themeColorsThresholdShades[bgThemeColorVariant];\n  if (bgShade && shadeThreshold && (bgShade >= shadeThreshold && bgThemeColorVariant !== 'dark' || bgThemeColorVariant === 'dark' && bgShade < shadeThreshold)) {\n    return 'lightText';\n  }\n  return 'darkText';\n}\nfunction getAccessibleContrastColor(contrastThreshold, trueDarkText, trueLightText, trueBg, trueColor, bg, color, suppressColorAccessibilityWarning) {\n  if (typeof trueBg !== 'string') {\n    trueBg = bg;\n  }\n  var trueContrastColor;\n  var contrastColorToken;\n  var darkTextConstrast = getContrastRatio(trueBg, trueDarkText);\n  var lightTextConstrast = getContrastRatio(trueBg, trueLightText);\n  if (darkTextConstrast >= contrastThreshold || darkTextConstrast > lightTextConstrast) {\n    trueContrastColor = trueDarkText;\n    contrastColorToken = 'darkText';\n  } else {\n    trueContrastColor = trueLightText;\n    contrastColorToken = 'lightText';\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    var contrast = getContrastRatio(trueBg, trueColor ? trueColor : trueContrastColor);\n    if (contrast < 3 && !suppressColorAccessibilityWarning) {\n      console.warn([\"NativeBase: The contrast ratio of \".concat(contrast, \":1 for \").concat(color ? color : contrastColorToken, \" on \").concat(bg), 'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.', 'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'].join('\\n'));\n    }\n  }\n  return contrastColorToken;\n}\nfunction getContrastRatio(foreground, background) {\n  var lumA = Color(foreground).getLuminance();\n  var lumB = Color(background).getLuminance();\n  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);\n}\nvar themeColorsThresholdShades = {\n  rose: 500,\n  pink: 500,\n  fuchsia: 800,\n  purple: 700,\n  violet: 600,\n  indigo: 500,\n  blue: 400,\n  lightBlue: 400,\n  cyan: 300,\n  teal: 300,\n  emerald: 300,\n  tertiary: 300,\n  green: 400,\n  lime: 600,\n  yellow: 800,\n  amber: 500,\n  orange: 500,\n  red: 500,\n  warmGray: 500,\n  trueGray: 500,\n  gray: 500,\n  coolGray: 500,\n  blueGray: 500,\n  dark: 500,\n  danger: 500,\n  error: 500,\n  success: 400,\n  warning: 500,\n  muted: 500,\n  primary: 500,\n  info: 400,\n  secondary: 500,\n  light: 500\n};","map":{"version":3,"names":["Color","useToken","useAccessibleColors","useNativeBaseConfig","useContrastText","bg","color","_useToken","_useToken2","_slicedToArray","contrastThreshold","trueDarkText","trueLightText","trueBg","trueColor","suppressColorAccessibilityWarning","config","_useAccessibleColors","_useAccessibleColors2","accessibleColors","disableContrastText","_bg$split","split","_bg$split2","bgThemeColorVariant","bgShade","textColor","themeColorsThresholdShades","getContrastThemeColor","getAccessibleContrastColor","shadeThreshold","trueContrastColor","contrastColorToken","darkTextConstrast","getContrastRatio","lightTextConstrast","process","env","NODE_ENV","contrast","console","warn","concat","join","foreground","background","lumA","getLuminance","lumB","Math","max","min","rose","pink","fuchsia","purple","violet","indigo","blue","lightBlue","cyan","teal","emerald","tertiary","green","lime","yellow","amber","orange","red","warmGray","trueGray","gray","coolGray","blueGray","dark","danger","error","success","warning","muted","primary","info","secondary","light"],"sources":["C:\\Users\\vinch\\OneDrive\\Desktop\\daily_bites\\frontend\\node_modules\\native-base\\lib\\module\\hooks\\useContrastText.ts"],"sourcesContent":["import Color from 'tinycolor2';\nimport { useToken } from './useToken';\nimport { useAccessibleColors } from '../core/color-mode/hooks';\nimport { useNativeBaseConfig } from '../core/NativeBaseContext';\n\nexport function useContrastText(bg: string, color?: string) {\n  const [\n    contrastThreshold,\n    trueDarkText,\n    trueLightText,\n    trueBg,\n    trueColor,\n  ] = useToken('colors', [\n    'contrastThreshold',\n    'darkText',\n    'lightText',\n    bg,\n    color ?? '',\n  ]);\n\n  const suppressColorAccessibilityWarning = useNativeBaseConfig(\n    'NativeBaseConfigProvider'\n  ).config.suppressColorAccessibilityWarning;\n\n  const [accessibleColors] = useAccessibleColors();\n\n  if (useNativeBaseConfig('NativeBaseConfigProvider').disableContrastText) {\n    return trueColor;\n  }\n  if (typeof bg !== 'string') {\n    return;\n  }\n\n  const [bgThemeColorVariant, bgShade] = bg.split('.');\n\n  const textColor =\n    !accessibleColors &&\n    bgThemeColorVariant &&\n    themeColorsThresholdShades[bgThemeColorVariant]\n      ? getContrastThemeColor(bgThemeColorVariant, bgShade)\n      : getAccessibleContrastColor(\n          contrastThreshold,\n          trueDarkText,\n          trueLightText,\n          trueBg,\n          trueColor,\n          bg,\n          color,\n          suppressColorAccessibilityWarning\n        );\n\n  return textColor;\n}\n\nfunction getContrastThemeColor(bgThemeColorVariant: string, bgShade: string) {\n  const shadeThreshold = themeColorsThresholdShades[bgThemeColorVariant];\n  if (\n    bgShade &&\n    shadeThreshold &&\n    ((bgShade >= shadeThreshold && bgThemeColorVariant !== 'dark') ||\n      (bgThemeColorVariant === 'dark' && bgShade < shadeThreshold))\n  ) {\n    return 'lightText';\n  }\n  return 'darkText';\n}\nfunction getAccessibleContrastColor(\n  contrastThreshold: number,\n  trueDarkText: string,\n  trueLightText: string,\n  trueBg: string,\n  trueColor: string,\n  bg: string,\n  color?: string,\n  suppressColorAccessibilityWarning?: boolean\n) {\n  if (typeof trueBg !== 'string') {\n    trueBg = bg;\n  }\n  let trueContrastColor;\n  let contrastColorToken;\n  const darkTextConstrast = getContrastRatio(trueBg, trueDarkText);\n  const lightTextConstrast = getContrastRatio(trueBg, trueLightText);\n\n  if (\n    darkTextConstrast >= contrastThreshold ||\n    darkTextConstrast > lightTextConstrast\n  ) {\n    trueContrastColor = trueDarkText;\n    contrastColorToken = 'darkText';\n  } else {\n    trueContrastColor = trueLightText;\n    contrastColorToken = 'lightText';\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    const contrast = getContrastRatio(\n      trueBg,\n      trueColor ? trueColor : trueContrastColor\n    );\n    if (contrast < 3 && !suppressColorAccessibilityWarning) {\n      console.warn(\n        [\n          `NativeBase: The contrast ratio of ${contrast}:1 for ${\n            color ? color : contrastColorToken\n          } on ${bg}`,\n          'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.',\n          'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast',\n        ].join('\\n')\n      );\n    }\n  }\n  return contrastColorToken;\n}\nfunction getContrastRatio(foreground: string, background: string) {\n  const lumA = Color(foreground).getLuminance();\n  const lumB = Color(background).getLuminance();\n  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);\n}\n\nconst themeColorsThresholdShades: any = {\n  rose: 500,\n  pink: 500,\n  fuchsia: 800,\n  purple: 700,\n  violet: 600,\n  indigo: 500,\n  blue: 400,\n  lightBlue: 400,\n  cyan: 300,\n  teal: 300,\n  emerald: 300,\n  tertiary: 300,\n  green: 400,\n  lime: 600,\n  yellow: 800,\n  amber: 500,\n  orange: 500,\n  red: 500,\n  warmGray: 500,\n  trueGray: 500,\n  gray: 500,\n  coolGray: 500,\n  blueGray: 500,\n  dark: 500,\n  danger: 500,\n  error: 500,\n  success: 400,\n  warning: 500,\n  muted: 500,\n  primary: 500,\n  info: 400,\n  secondary: 500,\n  light: 500,\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}