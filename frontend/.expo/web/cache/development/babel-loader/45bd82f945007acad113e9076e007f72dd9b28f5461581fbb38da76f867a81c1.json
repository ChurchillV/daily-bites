{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nexport var useFocus = function useFocus() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isFocused = _useState2[0],\n    setFocused = _useState2[1];\n  return {\n    focusProps: {\n      onFocus: function onFocus() {\n        return setFocused(true);\n      },\n      onBlur: function onBlur() {\n        return setFocused(false);\n      }\n    },\n    isFocused: isFocused\n  };\n};","map":{"version":3,"names":["useState","useFocus","_useState","_useState2","_slicedToArray","isFocused","setFocused","focusProps","onFocus","onBlur"],"sources":["C:\\Users\\vinch\\OneDrive\\Desktop\\daily_bites\\frontend\\node_modules\\@react-native-aria\\focus\\lib\\module\\useFocus.ts"],"sourcesContent":["import { useState } from 'react';\n\nexport const useFocus = () => {\n  const [isFocused, setFocused] = useState(false);\n  return {\n    focusProps: {\n      onFocus: () => setFocused(true),\n      onBlur: () => setFocused(false),\n    },\n    isFocused,\n  };\n};\n"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;EAC5B,IAAAC,SAAA,GAAgCF,QAAQ,CAAC,KAAD,CAAxC;IAAAG,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAOG,SAAD,GAAAF,UAAA;IAAYG,UAAZ,GAAAH,UAAA;EACN,OAAO;IACLI,UAAU,EAAE;MACVC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMF,UAAU,CAAC,IAAD,CADf;MAAA;MAEVG,MAAM,EAAE,SAAAA,OAAA;QAAA,OAAMH,UAAU,CAAC,KAAD;MAAA;IAFd,CADP;IAKLD,SAAA,EAAAA;EALK,CAAP;AAOD,CATM"},"metadata":{},"sourceType":"module","externalDependencies":[]}