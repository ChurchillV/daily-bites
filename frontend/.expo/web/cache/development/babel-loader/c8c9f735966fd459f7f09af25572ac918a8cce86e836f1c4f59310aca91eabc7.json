{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"isDisabled\"],\n  _excluded2 = [\"handleChange\", \"handleChangeWithoutCheck\", \"numberInputStepper\", \"numberInputValue\", \"isControlled\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React from 'react';\nimport { Input } from \"../../primitives/Input\";\nimport { NumberInputContext } from \"./Context\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar NumberInputFiled = function NumberInputFiled(_ref, ref) {\n  var isDisabled = _ref.isDisabled,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var _React$useContext = React.useContext(NumberInputContext),\n    handleChange = _React$useContext.handleChange,\n    handleChangeWithoutCheck = _React$useContext.handleChangeWithoutCheck,\n    numberInputStepper = _React$useContext.numberInputStepper,\n    numberInputValue = _React$useContext.numberInputValue,\n    isControlled = _React$useContext.isControlled,\n    context = _objectWithoutProperties(_React$useContext, _excluded2);\n  var changeHandler = function changeHandler(inputValue) {\n    var minusIndex = inputValue.indexOf('-');\n    if (minusIndex !== -1 && minusIndex !== 0) {\n      inputValue = inputValue.replace('-', '');\n      inputValue = '-' + inputValue;\n    }\n    var value = parseInt(inputValue, 10);\n    if (isControlled) handleChange && handleChange(value);else if (value) handleChangeWithoutCheck && handleChangeWithoutCheck(value);else handleChangeWithoutCheck && handleChangeWithoutCheck(0);\n  };\n  var blurHandler = function blurHandler() {\n    if (numberInputValue) handleChange && handleChange(numberInputValue);\n  };\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(React.Fragment, null, React.createElement(Input, _extends({\n    p: 0,\n    pl: 2\n  }, context, props, {\n    onBlur: function onBlur() {\n      return blurHandler();\n    },\n    isDisabled: isDisabled || context.isDisabled,\n    onChangeText: function onChangeText(inputValue) {\n      return changeHandler(inputValue);\n    },\n    keyboardType: \"numeric\",\n    value: \"\".concat(numberInputValue),\n    InputRightElement: numberInputStepper,\n    ref: ref\n  })));\n};\nexport default React.memo(React.forwardRef(NumberInputFiled));","map":{"version":3,"names":["React","Input","NumberInputContext","useHasResponsiveProps","NumberInputFiled","_ref","ref","isDisabled","props","_objectWithoutProperties","_excluded","_React$useContext","useContext","handleChange","handleChangeWithoutCheck","numberInputStepper","numberInputValue","isControlled","context","_excluded2","changeHandler","inputValue","minusIndex","indexOf","replace","value","parseInt","blurHandler","createElement","Fragment","_extends","p","pl","onBlur","onChangeText","keyboardType","concat","InputRightElement","memo","forwardRef"],"sources":["C:\\Users\\H P\\Desktop\\Daily Bite\\daily-bites\\frontend\\node_modules\\native-base\\lib\\module\\components\\composites\\NumberInput\\NumberInputField.tsx"],"sourcesContent":["import React from 'react';\nimport { Input } from '../../primitives/Input';\nimport type { INumberInputContext, INumberInputFieldProps } from './types';\nimport { NumberInputContext } from './Context';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst NumberInputFiled = (\n  { isDisabled, ...props }: INumberInputFieldProps,\n  ref: any\n) => {\n  const {\n    handleChange,\n    handleChangeWithoutCheck,\n    numberInputStepper,\n    numberInputValue,\n    isControlled,\n    ...context\n  }: INumberInputContext & {\n    handleChange?: (value: string | number) => void;\n    numberInputStepper?: any;\n  } = React.useContext(NumberInputContext);\n  const changeHandler = (inputValue: any) => {\n    let minusIndex = inputValue.indexOf('-');\n    if (minusIndex !== -1 && minusIndex !== 0) {\n      inputValue = inputValue.replace('-', '');\n      inputValue = '-' + inputValue;\n    }\n    const value = parseInt(inputValue, 10);\n    if (isControlled) handleChange && handleChange(value);\n    else if (value) handleChangeWithoutCheck && handleChangeWithoutCheck(value);\n    else handleChangeWithoutCheck && handleChangeWithoutCheck(0);\n  };\n  const blurHandler = () => {\n    if (numberInputValue) handleChange && handleChange(numberInputValue);\n  };\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <>\n      <Input\n        p={0}\n        pl={2}\n        {...context}\n        {...props}\n        onBlur={() => blurHandler()}\n        isDisabled={isDisabled || context.isDisabled}\n        onChangeText={(inputValue: any) => changeHandler(inputValue)}\n        keyboardType=\"numeric\"\n        value={`${numberInputValue}`}\n        InputRightElement={numberInputStepper}\n        ref={ref}\n      />\n    </>\n  );\n};\n\nexport default React.memo(React.forwardRef(NumberInputFiled));\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT;AAEA,SAASC,kBAAT;AACA,SAASC,qBAAT;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAAC,IAAA,EAEpBC,GAFuB,EAGpB;EAAA,IAFDC,UAAF,GAAAF,IAAA,CAAEE,UAAF;IAAiBC,KAAA,GAAAC,wBAAA,CAAAJ,IAAA,EAAAK,SAAA;EAGjB,IAAAC,iBAAA,GAUIX,KAAK,CAACY,UAAN,CAAiBV,kBAAjB,CAVJ;IACEW,YADI,GAAAF,iBAAA,CACJE,YADI;IAEJC,wBAFI,GAAAH,iBAAA,CAEJG,wBAFI;IAGJC,kBAHI,GAAAJ,iBAAA,CAGJI,kBAHI;IAIJC,gBAJI,GAAAL,iBAAA,CAIJK,gBAJI;IAKJC,YALI,GAAAN,iBAAA,CAKJM,YALI;IAMDC,OAAA,GAAAT,wBAAA,CAAAE,iBAAA,EAAAQ,UAAA;EAKL,IAAMC,aAAa,GAAI,SAAjBA,aAAaA,CAAIC,UAAD,EAAqB;IACzC,IAAIC,UAAU,GAAGD,UAAU,CAACE,OAAX,CAAmB,GAAnB,CAAjB;IACA,IAAID,UAAU,KAAK,CAAC,CAAhB,IAAqBA,UAAU,KAAK,CAAxC,EAA2C;MACzCD,UAAU,GAAGA,UAAU,CAACG,OAAX,CAAmB,GAAnB,EAAwB,EAAxB,CAAb;MACAH,UAAU,GAAG,MAAMA,UAAnB;IACD;IACD,IAAMI,KAAK,GAAGC,QAAQ,CAACL,UAAD,EAAa,EAAb,CAAtB;IACA,IAAIJ,YAAJ,EAAkBJ,YAAY,IAAIA,YAAY,CAACY,KAAD,CAA5B,CAAlB,KACK,IAAIA,KAAJ,EAAWX,wBAAwB,IAAIA,wBAAwB,CAACW,KAAD,CAApD,CAAX,KACAX,wBAAwB,IAAIA,wBAAwB,CAAC,CAAD,CAApD;EACN,CAVD;EAWA,IAAMa,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxB,IAAIX,gBAAJ,EAAsBH,YAAY,IAAIA,YAAY,CAACG,gBAAD,CAA5B;EACvB,CAFD;EAIA,IAAIb,qBAAqB,CAACK,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EACD,OACER,KAAA,CAAA4B,aAAA,CAAA5B,KAAA,CAAA6B,QAAA,QACE7B,KAAA,CAAA4B,aAAA,CAAC3B,KAAD,EAAA6B,QAAA;IACEC,CAAC,EAAE,CADL;IAEEC,EAAE,EAAE;EAFN,GAGMd,OAHN,EAIMV,KAJN;IAKEyB,MAAM,EAAE,SAAAA,OAAA;MAAA,OAAMN,WAAW,EAL3B;IAAA;IAMEpB,UAAU,EAAEA,UAAU,IAAIW,OAAO,CAACX,UANpC;IAOE2B,YAAY,EAAG,SAAAA,aAAAb,UAAD;MAAA,OAAqBD,aAAa,CAACC,UAAD,CAPlD;IAAA;IAQEc,YAAY,EAAC,SARf;IASEV,KAAK,KAAAW,MAAA,CAAKpB,gBAAL,CATP;IAUEqB,iBAAiB,EAAEtB,kBAVrB;IAWET,GAAG,EAAEA;EAXP,GADF,CADF;AAiBD,CAlDD;AAoDA,eAAeN,KAAK,CAACsC,IAAN,CAAWtC,KAAK,CAACuC,UAAN,CAAiBnC,gBAAjB,CAAX,CAAf"},"metadata":{},"sourceType":"module","externalDependencies":[]}