{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"style\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nvar PortalContext = React.createContext(null);\nvar globalOverlayCounter = 0;\nexport function PortalProvider(props) {\n  var _React$useState = React.useState([]),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    items = _React$useState2[0],\n    setItems = _React$useState2[1];\n  var setOverlayItem = function setOverlayItem(element) {\n    var overlayId = ++globalOverlayCounter;\n    setItems(function (prev) {\n      return prev.concat([{\n        id: overlayId,\n        node: element\n      }]);\n    });\n    return overlayId;\n  };\n  var updateOverlayItem = function updateOverlayItem(id, node) {\n    setItems(function (prev) {\n      var overlayItem = prev.find(function (item) {\n        return item.id == id;\n      });\n      if (!overlayItem) {\n        return prev.concat([{\n          id: id,\n          node: node\n        }]);\n      } else {\n        return prev.map(function (item) {\n          if (item.id === id) {\n            return {\n              id: id,\n              node: node\n            };\n          }\n          return item;\n        });\n      }\n    });\n  };\n  var removeOverlayItem = function removeOverlayItem(id) {\n    setItems(function (prev) {\n      var newItems = prev.filter(function (item) {\n        return item.id !== id;\n      });\n      return newItems;\n    });\n  };\n  return React.createElement(PortalContext.Provider, {\n    value: {\n      items: items,\n      setOverlayItem: setOverlayItem,\n      removeOverlayItem: removeOverlayItem,\n      updateOverlayItem: updateOverlayItem,\n      isSSR: props === null || props === void 0 ? void 0 : props.isSSR\n    }\n  }, props.children, items.map(function (item) {\n    return React.createElement(React.Fragment, {\n      key: item.id\n    }, item.node);\n  }));\n}\nfunction OverlayView(_ref) {\n  var style = _ref.style,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return React.createElement(View, _extends({\n    pointerEvents: \"box-none\",\n    style: [StyleSheet.absoluteFill, style],\n    collapsable: false\n  }, props));\n}\nexport var OverlayProvider = PortalProvider;\nexport function OverlayContainer(props) {\n  var context = usePortalProvider();\n  var overlayId = React.useRef(undefined);\n  var element = React.createElement(OverlayView, props);\n  useEffect(function () {\n    if (overlayId.current === undefined) {\n      overlayId.current = context === null || context === void 0 ? void 0 : context.setOverlayItem(element);\n    } else {\n      if (overlayId.current) {\n        context === null || context === void 0 ? void 0 : context.updateOverlayItem(overlayId.current, element);\n      }\n    }\n  }, [props]);\n  useEffect(function () {\n    return function () {\n      if (overlayId.current) {\n        context === null || context === void 0 ? void 0 : context.removeOverlayItem(overlayId.current);\n      }\n    };\n  }, []);\n  if (context !== null && context !== void 0 && context.isSSR && !overlayId.current) {\n    return React.createElement(View, {\n      style: {\n        display: 'none'\n      }\n    }, element);\n  }\n  return null;\n}\nfunction usePortalProvider() {\n  var context = React.useContext(PortalContext);\n  return context;\n}","map":{"version":3,"names":["React","useEffect","StyleSheet","View","PortalContext","createContext","globalOverlayCounter","PortalProvider","props","_React$useState","useState","_React$useState2","_slicedToArray","items","setItems","setOverlayItem","element","overlayId","prev","concat","id","node","updateOverlayItem","overlayItem","find","item","map","removeOverlayItem","newItems","filter","createElement","Provider","value","isSSR","children","Fragment","key","OverlayView","_ref","style","_objectWithoutProperties","_excluded","_extends","pointerEvents","absoluteFill","collapsable","OverlayProvider","OverlayContainer","context","usePortalProvider","useRef","undefined","current","display","useContext"],"sources":["C:\\Users\\H P\\Desktop\\Daily Bite\\daily-bites\\frontend\\node_modules\\@react-native-aria\\overlays\\lib\\module\\Portal.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport type { ReactNode } from 'react';\nimport { StyleSheet, View, ViewProps } from 'react-native';\n\ntype OverlayItem = {\n  id: number;\n  node: ReactNode;\n};\n\ninterface PortalContext {\n  items: Array<OverlayItem>;\n  setOverlayItem: (node: ReactNode) => number;\n  removeOverlayItem: (id: number) => void;\n  updateOverlayItem: (id: number, node: ReactNode) => void;\n  isSSR?: boolean;\n}\n\ninterface ModalProviderProps extends ViewProps {\n  children: ReactNode;\n  provider?: boolean;\n}\n\nconst PortalContext = React.createContext<PortalContext | null>(null);\n\nlet globalOverlayCounter = 0;\n\nexport function PortalProvider(props: {\n  children: ReactNode;\n  isSSR?: boolean;\n}) {\n  const [items, setItems] = React.useState<Array<OverlayItem>>([]);\n\n  const setOverlayItem = (element: ReactNode) => {\n    const overlayId = ++globalOverlayCounter;\n    setItems((prev) => prev.concat([{ id: overlayId, node: element }]));\n    return overlayId;\n  };\n\n  const updateOverlayItem = (id: number, node: ReactNode) => {\n    setItems((prev) => {\n      const overlayItem = prev.find((item) => item.id == id);\n      if (!overlayItem) {\n        return prev.concat([{ id: id, node }]);\n      } else {\n        return prev.map((item) => {\n          if (item.id === id) {\n            return { id, node };\n          }\n\n          return item;\n        });\n      }\n    });\n  };\n\n  const removeOverlayItem = (id: number) => {\n    setItems((prev) => {\n      const newItems = prev.filter((item) => item.id !== id);\n      return newItems;\n    });\n  };\n\n  return (\n    <PortalContext.Provider\n      value={{\n        items,\n        setOverlayItem,\n        removeOverlayItem,\n        updateOverlayItem,\n        isSSR: props?.isSSR,\n      }}\n    >\n      {props.children}\n\n      {/* Render Overlays */}\n      {items.map((item) => {\n        return <React.Fragment key={item.id}>{item.node}</React.Fragment>;\n      })}\n    </PortalContext.Provider>\n  );\n}\n\nfunction OverlayView({ style, ...props }: ModalProviderProps) {\n  return (\n    <View\n      pointerEvents=\"box-none\"\n      style={[StyleSheet.absoluteFill, style]}\n      collapsable={false}\n      {...props}\n    />\n  );\n}\n\nexport const OverlayProvider = PortalProvider;\n\nexport function OverlayContainer(props: ModalProviderProps) {\n  const context = usePortalProvider();\n  const overlayId = React.useRef<number | undefined>(undefined);\n  const element = <OverlayView {...props} />;\n\n  useEffect(\n    () => {\n      // Mount\n      if (overlayId.current === undefined) {\n        overlayId.current = context?.setOverlayItem(element);\n      }\n      // Update\n      else {\n        if (overlayId.current) {\n          context?.updateOverlayItem(overlayId.current, element);\n        }\n      }\n    },\n    // To re-render the child\n    [props]\n  );\n\n  // Unmount\n  useEffect(() => {\n    return () => {\n      if (overlayId.current) {\n        context?.removeOverlayItem(overlayId.current);\n      }\n    };\n  }, []);\n\n  // Rendering elements for SSR\n  if (context?.isSSR && !overlayId.current) {\n    return <View style={{ display: 'none' }}>{element}</View>;\n  }\n  return null;\n}\n\nfunction usePortalProvider() {\n  const context = React.useContext(PortalContext);\n  return context;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}