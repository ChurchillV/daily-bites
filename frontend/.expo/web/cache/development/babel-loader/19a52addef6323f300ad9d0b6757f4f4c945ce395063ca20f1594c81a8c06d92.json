{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nexport function useDisclose(initState) {\n  var _React$useState = React.useState(initState || false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isOpen = _React$useState2[0],\n    setIsOpen = _React$useState2[1];\n  var onOpen = function onOpen() {\n    setIsOpen(true);\n  };\n  var onClose = function onClose() {\n    setIsOpen(false);\n  };\n  var onToggle = function onToggle() {\n    setIsOpen(!isOpen);\n  };\n  return {\n    isOpen: isOpen,\n    onOpen: onOpen,\n    onClose: onClose,\n    onToggle: onToggle\n  };\n}","map":{"version":3,"names":["React","useDisclose","initState","_React$useState","useState","_React$useState2","_slicedToArray","isOpen","setIsOpen","onOpen","onClose","onToggle"],"sources":["C:\\Users\\H P\\Desktop\\Daily Bite\\daily-bites\\frontend\\node_modules\\native-base\\lib\\module\\hooks\\useDisclose.ts"],"sourcesContent":["import React from 'react';\n\nexport function useDisclose(initState?: boolean) {\n  const [isOpen, setIsOpen] = React.useState(initState || false);\n  const onOpen = () => {\n    setIsOpen(true);\n  };\n  const onClose = () => {\n    setIsOpen(false);\n  };\n  const onToggle = () => {\n    setIsOpen(!isOpen);\n  };\n  return {\n    isOpen,\n    onOpen,\n    onClose,\n    onToggle,\n  };\n}\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,SAASC,WAATA,CAAqBC,SAArB,EAA0C;EAC/C,IAAAC,eAAA,GAA4BH,KAAK,CAACI,QAAN,CAAeF,SAAS,IAAI,KAA5B,CAA5B;IAAAG,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAOI,MAAD,GAAAF,gBAAA;IAASG,SAAT,GAAAH,gBAAA;EACN,IAAMI,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAS;IACnBD,SAAS,CAAC,IAAD,CAAT;EACD,CAFD;EAGA,IAAME,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;IACpBF,SAAS,CAAC,KAAD,CAAT;EACD,CAFD;EAGA,IAAMG,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;IACrBH,SAAS,CAAC,CAACD,MAAF,CAAT;EACD,CAFD;EAGA,OAAO;IACLA,MADK,EACLA,MADK;IAELE,MAFK,EAELA,MAFK;IAGLC,OAHK,EAGLA,OAHK;IAILC,QAAA,EAAAA;EAJK,CAAP;AAMD"},"metadata":{},"sourceType":"module","externalDependencies":[]}