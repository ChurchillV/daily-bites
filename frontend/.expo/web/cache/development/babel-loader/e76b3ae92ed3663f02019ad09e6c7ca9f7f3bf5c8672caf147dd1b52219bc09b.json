{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nexport var useLayout = function useLayout() {\n  var _React$useState = React.useState({\n      width: 0,\n      height: 0\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    layout = _React$useState2[0],\n    setLayout = _React$useState2[1];\n  return {\n    onLayout: function onLayout(e) {\n      setLayout(e.nativeEvent.layout);\n    },\n    layout: layout\n  };\n};","map":{"version":3,"names":["React","useLayout","_React$useState","useState","width","height","_React$useState2","_slicedToArray","layout","setLayout","onLayout","e","nativeEvent"],"sources":["C:\\Users\\H P\\Desktop\\Daily Bite\\daily-bites\\frontend\\node_modules\\native-base\\lib\\module\\hooks\\useLayout.tsx"],"sourcesContent":["import React from 'react';\nimport type { LayoutChangeEvent } from 'react-native';\n\nexport const useLayout = () => {\n  const [layout, setLayout] = React.useState({\n    width: 0,\n    height: 0,\n  });\n  return {\n    onLayout: (e: LayoutChangeEvent) => {\n      setLayout(e.nativeEvent.layout);\n    },\n    layout,\n  };\n};\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;EAC7B,IAAAC,eAAA,GAA4BF,KAAK,CAACG,QAAN,CAAe;MACzCC,KAAK,EAAE,CADkC;MAEzCC,MAAM,EAAE;IAFiC,CAAf,CAA5B;IAAAC,gBAAA,GAAAC,cAAA,CAAAL,eAAA;IAAOM,MAAD,GAAAF,gBAAA;IAASG,SAAT,GAAAH,gBAAA;EAIN,OAAO;IACLI,QAAQ,EAAG,SAAAA,SAAAC,CAAD,EAA0B;MAClCF,SAAS,CAACE,CAAC,CAACC,WAAF,CAAcJ,MAAf,CAAT;IACD,CAHI;IAILA,MAAA,EAAAA;EAJK,CAAP;AAMD,CAXM"},"metadata":{},"sourceType":"module","externalDependencies":[]}