{"ast":null,"code":"var uppercasePattern = /[A-Z]/g;\nvar msPattern = /^ms-/;\nvar cache = {};\nfunction toHyphenLower(match) {\n  return '-' + match.toLowerCase();\n}\nfunction hyphenateStyleName(name) {\n  if (name in cache) {\n    return cache[name];\n  }\n  var hName = name.replace(uppercasePattern, toHyphenLower);\n  return cache[name] = msPattern.test(hName) ? '-' + hName : hName;\n}\nexport default hyphenateStyleName;","map":{"version":3,"names":["uppercasePattern","msPattern","cache","toHyphenLower","match","toLowerCase","hyphenateStyleName","name","hName","replace","test"],"sources":["C:\\Users\\H P\\Desktop\\Daily Bite\\daily-bites\\frontend\\node_modules\\native-base\\lib\\module\\utils\\react-native-web-fucntions\\hyphenateStyleName.ts"],"sourcesContent":["/* eslint-disable */\n//@ts-nocheck\n// This functions is taken from react native web\n\nconst uppercasePattern = /[A-Z]/g;\nconst msPattern = /^ms-/;\nconst cache: any = {};\n\nfunction toHyphenLower(match: any) {\n  return '-' + match.toLowerCase();\n}\n\nfunction hyphenateStyleName(name: string): string {\n  if (name in cache) {\n    return cache[name];\n  }\n\n  const hName = name.replace(uppercasePattern, toHyphenLower);\n  return (cache[name] = msPattern.test(hName) ? '-' + hName : hName);\n}\n\nexport default hyphenateStyleName;\n"],"mappings":"AAIA,IAAMA,gBAAgB,GAAG,QAAzB;AACA,IAAMC,SAAS,GAAG,MAAlB;AACA,IAAMC,KAAU,GAAG,EAAnB;AAEA,SAASC,aAATA,CAAuBC,KAAvB,EAAmC;EACjC,OAAO,MAAMA,KAAK,CAACC,WAAN,EAAb;AACD;AAED,SAASC,kBAATA,CAA4BC,IAA5B,EAAkD;EAChD,IAAIA,IAAI,IAAIL,KAAZ,EAAmB;IACjB,OAAOA,KAAK,CAACK,IAAD,CAAZ;EACD;EAED,IAAMC,KAAK,GAAGD,IAAI,CAACE,OAAL,CAAaT,gBAAb,EAA+BG,aAA/B,CAAd;EACA,OAAQD,KAAK,CAACK,IAAD,CAAL,GAAcN,SAAS,CAACS,IAAV,CAAeF,KAAf,IAAwB,MAAMA,KAA9B,GAAsCA,KAA5D;AACD;AAED,eAAeF,kBAAf"},"metadata":{},"sourceType":"module","externalDependencies":[]}