{"ast":null,"code":"import { propConfig } from \"../theme/styled-system\";\nexport var getStyledSystemPropsAndRestProps = function getStyledSystemPropsAndRestProps(props) {\n  var styledSystemProps = {};\n  var restProps = {};\n  for (var key in props) {\n    if (key in propConfig) {\n      styledSystemProps[key] = props[key];\n    } else {\n      restProps[key] = props[key];\n    }\n  }\n  return {\n    styledSystemProps: styledSystemProps,\n    restProps: restProps\n  };\n};","map":{"version":3,"names":["propConfig","getStyledSystemPropsAndRestProps","props","styledSystemProps","restProps","key"],"sources":["C:\\Users\\H P\\Desktop\\Daily Bite\\daily-bites\\frontend\\node_modules\\native-base\\lib\\module\\utils\\getStyledSystemPropsAndRestProps.ts"],"sourcesContent":["import { propConfig } from '../theme/styled-system';\n/**\n * Common Logic Sharing between useSx and useStyledSystemPropResolver\n * @param props\n * @returns { styledSystemProps, restProps }\n */\nexport const getStyledSystemPropsAndRestProps = (props: any) => {\n  const styledSystemProps: any = {};\n  const restProps: any = {};\n\n  for (let key in props) {\n    if (key in propConfig) {\n      styledSystemProps[key] = props[key];\n    } else {\n      restProps[key] = props[key];\n    }\n  }\n\n  return { styledSystemProps, restProps };\n};\n"],"mappings":"AAAA,SAASA,UAAT;AAMA,OAAO,IAAMC,gCAAgC,GAAI,SAApCA,gCAAgCA,CAAIC,KAAD,EAAgB;EAC9D,IAAMC,iBAAsB,GAAG,EAA/B;EACA,IAAMC,SAAc,GAAG,EAAvB;EAEA,KAAK,IAAIC,GAAT,IAAgBH,KAAhB,EAAuB;IACrB,IAAIG,GAAG,IAAIL,UAAX,EAAuB;MACrBG,iBAAiB,CAACE,GAAD,CAAjB,GAAyBH,KAAK,CAACG,GAAD,CAA9B;IACD,CAFD,MAEO;MACLD,SAAS,CAACC,GAAD,CAAT,GAAiBH,KAAK,CAACG,GAAD,CAAtB;IACD;EACF;EAED,OAAO;IAAEF,iBAAF,EAAEA,iBAAF;IAAqBC,SAAA,EAAAA;EAArB,CAAP;AACD,CAbM"},"metadata":{},"sourceType":"module","externalDependencies":[]}