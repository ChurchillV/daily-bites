{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { memo, forwardRef } from 'react';\nimport { default as Box } from \"../Box\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps/usePropsResolution\";\nexport var InputLeftAddon = memo(forwardRef(function (props, ref) {\n  var resolvedProps = usePropsResolution('InputLeftAddon', props);\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(Box, _extends({}, resolvedProps, {\n    ref: ref\n  }), props.children);\n}));\nexport var InputRightAddon = memo(forwardRef(function (props, ref) {\n  var resolvedProps = usePropsResolution('InputRightAddon', props);\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return React.createElement(Box, _extends({}, resolvedProps, {\n    ref: ref\n  }), props.children);\n}));","map":{"version":3,"names":["React","memo","forwardRef","default","Box","useHasResponsiveProps","usePropsResolution","InputLeftAddon","props","ref","resolvedProps","createElement","_extends","children","InputRightAddon"],"sources":["C:\\Users\\vinch\\OneDrive\\Desktop\\daily_bites\\frontend\\node_modules\\native-base\\lib\\module\\components\\primitives\\Input\\InputAddons.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { default as Box, IBoxProps } from '../Box';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { usePropsResolution } from '../../../hooks/useThemeProps/usePropsResolution';\n\nexport const InputLeftAddon = memo(\n  //@r\n  forwardRef((props: IBoxProps, ref?: any) => {\n    const resolvedProps = usePropsResolution('InputLeftAddon', props);\n    //TODO: refactor for responsive prop\n    if (useHasResponsiveProps(props)) {\n      return null;\n    }\n    return (\n      <Box {...resolvedProps} ref={ref}>\n        {props.children}\n      </Box>\n    );\n  })\n);\nexport const InputRightAddon = memo(\n  forwardRef((props: IBoxProps, ref?: any) => {\n    const resolvedProps = usePropsResolution('InputRightAddon', props);\n    //TODO: refactor for responsive prop\n    if (useHasResponsiveProps(props)) {\n      return null;\n    }\n    return (\n      <Box {...resolvedProps} ref={ref}>\n        {props.children}\n      </Box>\n    );\n  })\n);\n"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AACA,SAASC,OAAO,IAAIC,GAApB;AACA,SAASC,qBAAT;AACA,SAASC,kBAAT;AAEA,OAAO,IAAMC,cAAc,GAAGN,IAAI,CAEhCC,UAAU,CAAC,UAACM,KAAD,EAAmBC,GAAnB,EAAiC;EAC1C,IAAMC,aAAa,GAAGJ,kBAAkB,CAAC,gBAAD,EAAmBE,KAAnB,CAAxC;EAEA,IAAIH,qBAAqB,CAACG,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EACD,OACER,KAAA,CAAAW,aAAA,CAACP,GAAD,EAAAQ,QAAA,KAASF,aAAT;IAAwBD,GAAG,EAAEA;EAA7B,IACGD,KAAK,CAACK,QADT,CADF;AAKD,CAXS,CAFsB,CAA3B;AAeP,OAAO,IAAMC,eAAe,GAAGb,IAAI,CACjCC,UAAU,CAAC,UAACM,KAAD,EAAmBC,GAAnB,EAAiC;EAC1C,IAAMC,aAAa,GAAGJ,kBAAkB,CAAC,iBAAD,EAAoBE,KAApB,CAAxC;EAEA,IAAIH,qBAAqB,CAACG,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EACD,OACER,KAAA,CAAAW,aAAA,CAACP,GAAD,EAAAQ,QAAA,KAASF,aAAT;IAAwBD,GAAG,EAAEA;EAA7B,IACGD,KAAK,CAACK,QADT,CADF;AAKD,CAXS,CADuB,CAA5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}