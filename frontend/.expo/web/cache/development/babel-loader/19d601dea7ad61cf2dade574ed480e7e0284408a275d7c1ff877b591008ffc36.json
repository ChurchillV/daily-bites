{"ast":null,"code":"import React from 'react';\nimport { useFocusManager } from '@react-native-aria/focus';\nimport { useId } from '@react-native-aria/utils';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { ResponsiveQueryContext } from \"../../../utils/useResponsiveQuery/ResponsiveQueryProvider\";\nimport uniqueId from 'lodash.uniqueid';\nexport var useMenuTrigger = function useMenuTrigger(_ref) {\n  var handleOpen = _ref.handleOpen,\n    isOpen = _ref.isOpen;\n  var menuTriggerId = uniqueId();\n  var responsiveQueryContext = React.useContext(ResponsiveQueryContext);\n  var disableCSSMediaQueries = responsiveQueryContext.disableCSSMediaQueries;\n  if (!disableCSSMediaQueries) {\n    menuTriggerId = useId();\n  }\n  return {\n    'onKeyDownCapture': function onKeyDownCapture(event) {\n      if ([' ', 'Enter', 'ArrowUp', 'ArrowDown'].includes(event.key)) {\n        event.preventDefault();\n        handleOpen();\n      }\n    },\n    'aria-haspopup': 'menu',\n    'aria-expanded': isOpen ? true : undefined,\n    'nativeID': menuTriggerId\n  };\n};\nexport var useMenu = function useMenu() {\n  var focusManager = useFocusManager();\n  var onKeyDown = function onKeyDown(e) {\n    switch (e.key) {\n      case 'ArrowDown':\n        {\n          e.preventDefault();\n          focusManager === null || focusManager === void 0 ? void 0 : focusManager.focusNext({\n            wrap: true\n          });\n          break;\n        }\n      case 'ArrowUp':\n        {\n          e.preventDefault();\n          focusManager === null || focusManager === void 0 ? void 0 : focusManager.focusPrevious({\n            wrap: true\n          });\n          break;\n        }\n    }\n  };\n  return {\n    onKeyDown: onKeyDown,\n    accessibilityRole: 'menu'\n  };\n};\nexport var useMenuItem = function useMenuItem(_ref2) {\n  var textValue = _ref2.textValue,\n    ref = _ref2.ref;\n  return {\n    accessibilityRole: 'menuitem',\n    dataSet: {\n      nativebaseMenuItem: textValue\n    },\n    onHoverIn: function onHoverIn() {\n      if (ref.current && Platform.OS === 'web') ref.current.focus();\n    }\n  };\n};\nexport var useMenuOptionItem = function useMenuOptionItem(_ref3) {\n  var isChecked = _ref3.isChecked,\n    type = _ref3.type;\n  return {\n    accessibilityRole: 'menuitem' + (Platform.OS === 'web' ? type : ''),\n    accessibilityState: {\n      checked: isChecked\n    },\n    accessibilityChecked: isChecked\n  };\n};\nvar ITEM_ATTR = 'data-nativebase-menu-item';\nvar getValue = function getValue(element) {\n  var _element$getAttribute;\n  return (_element$getAttribute = element.getAttribute(ITEM_ATTR)) !== null && _element$getAttribute !== void 0 ? _element$getAttribute : '';\n};\nexport var useMenuTypeahead = function useMenuTypeahead(props) {\n  return {\n    onKeyDown: function onKeyDown(event) {\n      if (props.onKeyDown) {\n        props.onKeyDown(event);\n      }\n      if (event.key.length === 1 && !(event.ctrlKey || event.altKey || event.metaKey)) {\n        var container = event.currentTarget;\n        var values = Array.from(container.querySelectorAll(\"[\".concat(ITEM_ATTR, \"]\"))).map(getValue);\n        var searchKey = event.key;\n        var foundValue = values.find(function (value) {\n          return value.toLowerCase().startsWith(searchKey);\n        });\n        var newItem = container.querySelector(\"[\".concat(ITEM_ATTR, \"=\\\"\").concat(foundValue, \"\\\"]\"));\n        if (newItem) {\n          setTimeout(function () {\n            return newItem.focus();\n          });\n        }\n      }\n    }\n  };\n};","map":{"version":3,"names":["React","useFocusManager","useId","Platform","ResponsiveQueryContext","uniqueId","useMenuTrigger","_ref","handleOpen","isOpen","menuTriggerId","responsiveQueryContext","useContext","disableCSSMediaQueries","onKeyDownCapture","event","includes","key","preventDefault","undefined","useMenu","focusManager","onKeyDown","e","focusNext","wrap","focusPrevious","accessibilityRole","useMenuItem","_ref2","textValue","ref","dataSet","nativebaseMenuItem","onHoverIn","current","OS","focus","useMenuOptionItem","_ref3","isChecked","type","accessibilityState","checked","accessibilityChecked","ITEM_ATTR","getValue","element","_element$getAttribute","getAttribute","useMenuTypeahead","props","length","ctrlKey","altKey","metaKey","container","currentTarget","values","Array","from","querySelectorAll","concat","map","searchKey","foundValue","find","value","toLowerCase","startsWith","newItem","querySelector","setTimeout"],"sources":["C:\\Users\\H P\\Desktop\\Daily Bite\\daily-bites\\frontend\\node_modules\\native-base\\lib\\module\\components\\composites\\Menu\\useMenu.tsx"],"sourcesContent":["import React from 'react';\nimport { useFocusManager } from '@react-native-aria/focus';\nimport { useId } from '@react-native-aria/utils';\nimport { AccessibilityRole, Platform } from 'react-native';\nimport { ResponsiveQueryContext } from '../../../utils/useResponsiveQuery/ResponsiveQueryProvider';\nimport uniqueId from 'lodash.uniqueid';\n\ntype IMenuTriggerProps = {\n  handleOpen: () => void;\n  isOpen: boolean;\n};\n\nexport const useMenuTrigger = ({ handleOpen, isOpen }: IMenuTriggerProps) => {\n  let menuTriggerId = uniqueId();\n\n  // let id = uniqueId();\n  const responsiveQueryContext = React.useContext(ResponsiveQueryContext);\n  const disableCSSMediaQueries = responsiveQueryContext.disableCSSMediaQueries;\n\n  if (!disableCSSMediaQueries) {\n    // This if statement technically breaks the rules of hooks, but is safe\n    // because the condition never changes after mounting.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    menuTriggerId = useId();\n  }\n  return {\n    'onKeyDownCapture': (event: KeyboardEvent) => {\n      if ([' ', 'Enter', 'ArrowUp', 'ArrowDown'].includes(event.key)) {\n        event.preventDefault();\n        handleOpen();\n      }\n    },\n    'aria-haspopup': 'menu',\n    'aria-expanded': isOpen ? true : undefined,\n    'nativeID': menuTriggerId,\n  };\n};\n\nexport const useMenu = () => {\n  const focusManager = useFocusManager();\n  const onKeyDown = (e: KeyboardEvent) => {\n    switch (e.key) {\n      case 'ArrowDown': {\n        e.preventDefault();\n        //@ts-ignore\n        focusManager?.focusNext({ wrap: true });\n        break;\n      }\n      case 'ArrowUp': {\n        e.preventDefault();\n        //@ts-ignore\n        focusManager?.focusPrevious({ wrap: true });\n        break;\n      }\n    }\n  };\n\n  return {\n    onKeyDown,\n    accessibilityRole: 'menu' as AccessibilityRole,\n  };\n};\n\nexport const useMenuItem = ({\n  textValue,\n  ref,\n}: {\n  textValue: string;\n  ref: any;\n}) => {\n  return {\n    accessibilityRole: 'menuitem' as AccessibilityRole,\n    dataSet: {\n      nativebaseMenuItem: textValue,\n    },\n    onHoverIn: () => {\n      if (ref.current && Platform.OS === 'web') ref.current.focus();\n    },\n  };\n};\n\nexport const useMenuOptionItem = ({\n  isChecked,\n  type,\n}: {\n  isChecked: boolean;\n  type: 'checkbox' | 'radio';\n}) => {\n  return {\n    accessibilityRole: ('menuitem' +\n      (Platform.OS === 'web' ? type : '')) as AccessibilityRole,\n    accessibilityState: {\n      checked: isChecked,\n    },\n    accessibilityChecked: isChecked,\n  };\n};\n\nconst ITEM_ATTR = 'data-nativebase-menu-item';\nconst getValue = (element: Element) => element.getAttribute(ITEM_ATTR) ?? '';\n\nexport const useMenuTypeahead = (props: any): any => {\n  return {\n    onKeyDown(event: KeyboardEvent) {\n      if (props.onKeyDown) {\n        props.onKeyDown(event);\n      }\n\n      if (\n        event.key.length === 1 &&\n        !(event.ctrlKey || event.altKey || event.metaKey)\n      ) {\n        const container = event.currentTarget as HTMLElement;\n        const values = Array.from(\n          container.querySelectorAll(`[${ITEM_ATTR}]`)\n        ).map(getValue);\n\n        const searchKey = event.key;\n\n        const foundValue = values.find((value) =>\n          value.toLowerCase().startsWith(searchKey)\n        );\n        const newItem = container.querySelector(\n          `[${ITEM_ATTR}=\"${foundValue}\"]`\n        );\n\n        if (newItem) {\n          /**\n           * Imperative focus during keydown is risky so we prevent React's batching updates\n           * to avoid potential bugs. See: https://github.com/facebook/react/issues/20332\n           */\n          setTimeout(() => (newItem as HTMLElement).focus());\n        }\n      }\n    },\n  };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}