{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { mergeProps as $7CUUz$mergeProps, filterDOMProps as $7CUUz$filterDOMProps, useFormReset as $7CUUz$useFormReset } from \"@react-aria/utils\";\nimport { useFocusable as $7CUUz$useFocusable } from \"@react-aria/focus\";\nimport { usePress as $7CUUz$usePress } from \"@react-aria/interactions\";\nfunction $d2c8e2b0480f3f34$export$cbe85ee05b554577(props, state, ref) {\n  var _props$isDisabled = props.isDisabled,\n    isDisabled = _props$isDisabled === void 0 ? false : _props$isDisabled,\n    _props$isRequired = props.isRequired,\n    isRequired = _props$isRequired === void 0 ? false : _props$isRequired,\n    _props$isReadOnly = props.isReadOnly,\n    isReadOnly = _props$isReadOnly === void 0 ? false : _props$isReadOnly,\n    value = props.value,\n    name = props.name,\n    children = props.children,\n    ariaLabel = props[\"aria-label\"],\n    ariaLabelledby = props[\"aria-labelledby\"],\n    _props$validationStat = props.validationState,\n    validationState = _props$validationStat === void 0 ? \"valid\" : _props$validationStat;\n  var onChange = function onChange(e) {\n    e.stopPropagation();\n    state.setSelected(e.target.checked);\n  };\n  var hasChildren = children != null;\n  var hasAriaLabel = ariaLabel != null || ariaLabelledby != null;\n  if (!hasChildren && !hasAriaLabel) console.warn(\"If you do not provide children, you must specify an aria-label for accessibility\");\n  var _ref = (0, $7CUUz$usePress)({\n      isDisabled: isDisabled\n    }),\n    pressProps = _ref.pressProps,\n    isPressed = _ref.isPressed;\n  var _ref2 = (0, $7CUUz$useFocusable)(props, ref),\n    focusableProps = _ref2.focusableProps;\n  var interactions = (0, $7CUUz$mergeProps)(pressProps, focusableProps);\n  var domProps = (0, $7CUUz$filterDOMProps)(props, {\n    labelable: true\n  });\n  (0, $7CUUz$useFormReset)(ref, state.isSelected, state.setSelected);\n  return {\n    inputProps: (0, $7CUUz$mergeProps)(domProps, _objectSpread(_objectSpread({\n      \"aria-invalid\": validationState === \"invalid\" || undefined,\n      \"aria-errormessage\": props[\"aria-errormessage\"],\n      \"aria-controls\": props[\"aria-controls\"],\n      \"aria-readonly\": isReadOnly || undefined,\n      \"aria-required\": isRequired || undefined,\n      onChange: onChange,\n      disabled: isDisabled\n    }, value == null ? {} : {\n      value: value\n    }), {}, {\n      name: name,\n      type: \"checkbox\"\n    }, interactions)),\n    isSelected: state.isSelected,\n    isPressed: isPressed,\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly\n  };\n}\nexport { $d2c8e2b0480f3f34$export$cbe85ee05b554577 as useToggle };","map":{"version":3,"names":["$d2c8e2b0480f3f34$export$cbe85ee05b554577","props","state","ref","_props$isDisabled","isDisabled","_props$isRequired","isRequired","_props$isReadOnly","isReadOnly","value","name","children","ariaLabel","ariaLabelledby","_props$validationStat","validationState","onChange","e","stopPropagation","setSelected","target","checked","hasChildren","hasAriaLabel","console","warn","_ref","$7CUUz$usePress","pressProps","isPressed","_ref2","$7CUUz$useFocusable","focusableProps","interactions","$7CUUz$mergeProps","domProps","$7CUUz$filterDOMProps","labelable","$7CUUz$useFormReset","isSelected","inputProps","_objectSpread","undefined","disabled","type"],"sources":["C:\\Users\\H P\\Desktop\\Daily Bite\\daily-bites\\frontend\\node_modules\\@react-aria\\toggle\\dist\\packages\\@react-aria\\toggle\\src\\index.ts","C:\\Users\\H P\\Desktop\\Daily Bite\\daily-bites\\frontend\\node_modules\\@react-aria\\toggle\\dist\\packages\\@react-aria\\toggle\\src\\useToggle.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport {useToggle} from './useToggle';\nexport type {AriaToggleProps} from '@react-types/checkbox';\nexport type {ToggleAria} from './useToggle';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaToggleProps} from '@react-types/checkbox';\nimport {filterDOMProps, mergeProps, useFormReset} from '@react-aria/utils';\nimport {InputHTMLAttributes, RefObject} from 'react';\nimport {ToggleState} from '@react-stately/toggle';\nimport {useFocusable} from '@react-aria/focus';\nimport {usePress} from '@react-aria/interactions';\n\nexport interface ToggleAria {\n  /**\n   * Props to be spread on the input element.\n   */\n  inputProps: InputHTMLAttributes<HTMLInputElement>,\n  /** Whether the toggle is selected. */\n  isSelected: boolean,\n  /** Whether the toggle is in a pressed state. */\n  isPressed: boolean,\n  /** Whether the toggle is disabled. */\n  isDisabled: boolean,\n  /** Whether the toggle is read only. */\n  isReadOnly: boolean\n}\n\n/**\n * Handles interactions for toggle elements, e.g. Checkboxes and Switches.\n */\nexport function useToggle(props: AriaToggleProps, state: ToggleState, ref: RefObject<HTMLInputElement>): ToggleAria {\n  let {\n    isDisabled = false,\n    isRequired = false,\n    isReadOnly = false,\n    value,\n    name,\n    children,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby,\n    validationState = 'valid'\n  } = props;\n\n  let onChange = (e) => {\n    // since we spread props on label, onChange will end up there as well as in here.\n    // so we have to stop propagation at the lowest level that we care about\n    e.stopPropagation();\n    state.setSelected(e.target.checked);\n  };\n\n  let hasChildren = children != null;\n  let hasAriaLabel = ariaLabel != null || ariaLabelledby != null;\n  if (!hasChildren && !hasAriaLabel) {\n    console.warn('If you do not provide children, you must specify an aria-label for accessibility');\n  }\n\n  // This handles focusing the input on pointer down, which Safari does not do by default.\n  let {pressProps, isPressed} = usePress({\n    isDisabled\n  });\n\n  let {focusableProps} = useFocusable(props, ref);\n  let interactions = mergeProps(pressProps, focusableProps);\n  let domProps = filterDOMProps(props, {labelable: true});\n\n  useFormReset(ref, state.isSelected, state.setSelected);\n\n  return {\n    inputProps: mergeProps(domProps, {\n      'aria-invalid': validationState === 'invalid' || undefined,\n      'aria-errormessage': props['aria-errormessage'],\n      'aria-controls': props['aria-controls'],\n      'aria-readonly': isReadOnly || undefined,\n      'aria-required': isRequired || undefined,\n      onChange,\n      disabled: isDisabled,\n      ...(value == null ? {} : {value}),\n      name,\n      type: 'checkbox',\n      ...interactions\n    }),\n    isSelected: state.isSelected,\n    isPressed,\n    isDisabled,\n    isReadOnly\n  };\n}\n"],"mappings":";;;;;;ACqCO,SAASA,0CAAUC,KAAsB,EAAEC,KAAkB,EAAEC,GAAgC;EACpG,IAAAC,iBAAA,GAUIH,KAAA,CAVAI,UAAA;IACFA,UAAA,GAAAD,iBAAA,cAAa,QAAAA,iBAAA;IAAAE,iBAAA,GASXL,KAAA,CATWM,UAAA;IACbA,UAAA,GAAAD,iBAAA,cAAa,QAAAA,iBAAA;IAAAE,iBAAA,GAQXP,KAAA,CARWQ,UAAA;IACbA,UAAA,GAAAD,iBAAA,cAAa,QAAAA,iBAAA;IACbE,KAAA,GAMET,KAAA,CAPWS,KAAA;IAEbC,IAAA,GAKEV,KAAA,CANGU,IAAA;IAELC,QAAA,GAIEX,KAAA,CALEW,QAAA;IAEUC,SAAA,GAGZZ,KAAA,CAHF;IACmBa,cAAA,GAEjBb,KAAA,CAFF;IAAAc,qBAAA,GAEEd,KAAA,CAF+Be,eAAA;IACjCA,eAAA,GAAAD,qBAAA,cAAkB,UAAAA,qBAAA;EAGpB,IAAIE,QAAA,GAAW,SAAXA,SAAYC,CAAA;IAGdA,CAAA,CAAEC,eAAA;IACFjB,KAAA,CAAMkB,WAAA,CAAYF,CAAA,CAAEG,MAAA,CAAOC,OAAA;EAC7B;EAEA,IAAIC,WAAA,GAAcX,QAAA,IAAY;EAC9B,IAAIY,YAAA,GAAeX,SAAA,IAAa,QAAQC,cAAA,IAAkB;EAC1D,IAAI,CAACS,WAAA,IAAe,CAACC,YAAA,EACnBC,OAAA,CAAQC,IAAA,CAAK;EAIf,IAAAC,IAAA,GAA8B,IAAAC,eAAO,EAAE;kBACrCvB;IACF;IAFKwB,UAAA,GAAAF,IAAA,CAADE,UAAA;IAAaC,SAAA,GAAAH,IAAA,CAAFG,SAAA;EAIf,IAAAC,KAAA,GAAuB,IAAAC,mBAAW,EAAE/B,KAAA,EAAOE,GAAA;IAAtC8B,cAAA,GAAAF,KAAA,CAADE,cAAA;EACJ,IAAIC,YAAA,GAAe,IAAAC,iBAAS,EAAEN,UAAA,EAAYI,cAAA;EAC1C,IAAIG,QAAA,GAAW,IAAAC,qBAAa,EAAEpC,KAAA,EAAO;IAACqC,SAAA,EAAW;EAAI;EAErD,IAAAC,mBAAW,EAAEpC,GAAA,EAAKD,KAAA,CAAMsC,UAAA,EAAYtC,KAAA,CAAMkB,WAAA;EAE1C,OAAO;IACLqB,UAAA,EAAY,IAAAN,iBAAS,EAAEC,QAAA,EAAAM,aAAA,CAAAA,aAAA;MACrB,gBAAgB1B,eAAA,KAAoB,aAAa2B,SAAA;MACjD,qBAAqB1C,KAAK,CAAC,oBAAoB;MAC/C,iBAAiBA,KAAK,CAAC,gBAAgB;MACvC,iBAAiBQ,UAAA,IAAckC,SAAA;MAC/B,iBAAiBpC,UAAA,IAAcoC,SAAA;gBAC/B1B,QAAA;MACA2B,QAAA,EAAUvC;IAAA,GACNK,KAAA,IAAS,OAAO,CAAC,IAAI;aAACA;IAAK,CAAC;YAChCC,IAAA;MACAkC,IAAA,EAAM;IAAA,GACHX,YAAY,CACjB;IACAM,UAAA,EAAYtC,KAAA,CAAMsC,UAAA;eAClBV,SAAA;gBACAzB,UAAA;gBACAI;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}