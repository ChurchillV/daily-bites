{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useButton } from \"./useButton\";\nimport { chain } from '@react-aria/utils';\nimport { mergeProps } from '@react-aria/utils';\nexport function useToggleButton(props, state) {\n  var isSelected = state.isSelected;\n  var _useButton = useButton(_objectSpread(_objectSpread({}, props), {}, {\n      onPress: chain(state.toggle, props.onPress)\n    })),\n    isPressed = _useButton.isPressed,\n    buttonProps = _useButton.buttonProps;\n  return {\n    isPressed: isPressed,\n    buttonProps: mergeProps(buttonProps, {\n      'aria-pressed': isSelected,\n      'accessibilityPressed': isSelected\n    })\n  };\n}","map":{"version":3,"names":["useButton","chain","mergeProps","useToggleButton","props","state","isSelected","_useButton","_objectSpread","onPress","toggle","isPressed","buttonProps"],"sources":["C:\\Users\\vinch\\OneDrive\\Desktop\\daily_bites\\frontend\\node_modules\\@react-native-aria\\button\\lib\\module\\useToggleButton.web.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport { ElementType } from 'react';\nimport { AriaToggleButtonProps } from '@react-types/button';\nimport { useButton } from './useButton';\nimport { chain } from '@react-aria/utils';\nimport { mergeProps } from '@react-aria/utils';\nimport { ToggleState } from '@react-stately/toggle';\n\n/**\n * Provides the behavior and accessibility implementation for a toggle button component.\n * ToggleButtons allow users to toggle a selection on or off, for example switching between two states or modes.\n */\nexport function useToggleButton(\n  props: AriaToggleButtonProps<ElementType>,\n  state: ToggleState\n): any {\n  /* eslint-enable no-redeclare */\n  const { isSelected } = state;\n  const { isPressed, buttonProps } = useButton({\n    ...props,\n    onPress: chain(state.toggle, props.onPress),\n  });\n\n  return {\n    isPressed,\n    buttonProps: mergeProps(buttonProps, {\n      // For v0.14+\n      'aria-pressed': isSelected,\n\n      // For v0.15+\n      'accessibilityPressed': isSelected,\n    }),\n  };\n}\n"],"mappings":";;;AAcA,SAASA,SAAT;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AAOA,OAAO,SAASC,eAATA,CACLC,KADK,EAELC,KAFK,EAGA;EAEL,IAAQC,UAAA,GAAeD,KAAvB,CAAQC,UAAA;EACR,IAAAC,UAAA,GAAmCP,SAAS,CAAAQ,aAAA,CAAAA,aAAA,KACvCJ,KADwC;MAE3CK,OAAO,EAAER,KAAK,CAACI,KAAK,CAACK,MAAP,EAAeN,KAAK,CAACK,OAArB;IAAA,EAF4B,CAA5C;IAAQE,SAAF,GAAAJ,UAAA,CAAEI,SAAF;IAAaC,WAAA,GAAAL,UAAA,CAAAK,WAAA;EAKnB,OAAO;IACLD,SADK,EACLA,SADK;IAELC,WAAW,EAAEV,UAAU,CAACU,WAAD,EAAc;MAEnC,gBAAgBN,UAFmB;MAKnC,wBAAwBA;IALW,CAAd;EAFlB,CAAP;AAUD"},"metadata":{},"sourceType":"module","externalDependencies":[]}