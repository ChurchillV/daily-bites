{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { atomic } from \"../react-native-web-fucntions/atomic\";\nimport preprocess from \"../react-native-web-fucntions/preprocess\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport stableHash from 'stable-hash';\nimport hash from \"./hash\";\nimport { useStableMemo } from \"./useStableMemo\";\nimport { getResponsiveStylesImpl, useDimensionsWithEnable } from \"./common\";\nimport { ResponsiveQueryContext } from \"./ResponsiveQueryProvider\";\nimport React from 'react';\nvar textContentMap = {};\nexport var useResponsiveQuery = function useResponsiveQuery(queries) {\n  var _queries$disableCSSMe;\n  var responsiveQueryContext = React.useContext(ResponsiveQueryContext);\n  var disableCSSMediaQueries = (_queries$disableCSSMe = queries === null || queries === void 0 ? void 0 : queries.disableCSSMediaQueries) !== null && _queries$disableCSSMe !== void 0 ? _queries$disableCSSMe : responsiveQueryContext.disableCSSMediaQueries;\n  var windowWidth = useDimensionsWithEnable({\n    enable: disableCSSMediaQueries\n  }).width;\n  var values = useStableMemo(function () {\n    if (disableCSSMediaQueries) {\n      var _getResponsiveStyles = getResponsiveStylesImpl(windowWidth);\n      if (queries) {\n        var _getResponsiveStyles2 = _getResponsiveStyles(queries),\n          styles = _getResponsiveStyles2.styles;\n        return {\n          styles: styles,\n          getResponsiveStyles: _getResponsiveStyles\n        };\n      } else {\n        return {\n          getResponsiveStyles: _getResponsiveStyles\n        };\n      }\n    } else {\n      if (queries) {\n        var _getResponsiveStyles3 = getResponsiveStyles(queries),\n          _styles = _getResponsiveStyles3.styles,\n          dataSet = _getResponsiveStyles3.dataSet;\n        return {\n          dataSet: dataSet,\n          styles: _styles,\n          getResponsiveStyles: getResponsiveStyles\n        };\n      } else {\n        return {\n          getResponsiveStyles: getResponsiveStyles\n        };\n      }\n    }\n  }, [queries, windowWidth, disableCSSMediaQueries]);\n  return values;\n};\nvar getDataAttribute = function getDataAttribute(queryRule) {\n  if (typeof queryRule.minWidth === 'number' && typeof queryRule.maxWidth === 'number') {\n    return \"min-width-\".concat(queryRule.minWidth, \"-max-width-\").concat(queryRule.maxWidth);\n  } else if (typeof queryRule.minWidth === 'number') {\n    return \"min-width-\".concat(queryRule.minWidth);\n  } else if (typeof queryRule.maxWidth === 'number') {\n    return \"max-width-\".concat(queryRule.maxWidth);\n  }\n  return undefined;\n};\nvar getMediaQueryRule = function getMediaQueryRule(query, newRule) {\n  if (typeof query.minWidth === 'number' && typeof query.maxWidth === 'number') {\n    return \"@media only screen and (min-width: \".concat(query.minWidth, \"px) and (max-width: \").concat(query.maxWidth, \"px) { \").concat(newRule, \" }\");\n  } else if (typeof query.minWidth === 'number') {\n    return \"@media only screen and (min-width: \".concat(query.minWidth, \"px) { \").concat(newRule, \" }\");\n  } else if (typeof query.maxWidth === 'number') {\n    return \"@media only screen and (max-width: \".concat(query.maxWidth, \"px) { \").concat(newRule, \" }\");\n  }\n  return undefined;\n};\nvar styleSheet;\nvar insert = function insert(rule) {\n  if (rule === '') {\n    return;\n  }\n  if (typeof window !== 'undefined') {\n    if (!styleSheet) {\n      var styleEl = document.createElement('style');\n      styleEl.type = 'text/css';\n      styleEl.appendChild(document.createTextNode(''));\n      document.head.appendChild(styleEl);\n      styleSheet = styleEl.sheet;\n    }\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n};\nvar getResponsiveStyles = function getResponsiveStyles(queries) {\n  var queryString = stableHash(queries.query);\n  var queriesHash = hash(queryString);\n  var styles = queries.initial ? [StyleSheet.create({\n    initial: StyleSheet.flatten(queries.initial)\n  }).initial] : undefined;\n  var dataSet = {};\n  if (queries.query) {\n    queries.query.forEach(function (queryRule) {\n      var queryHash = queriesHash + hash(stableHash(queryRule));\n      var dataAttribute = getDataAttribute(queryRule);\n      if (dataAttribute) {\n        var newIdentifier = \"[data-\".concat(dataAttribute, \"$=\\\"\").concat(queryHash, \"\\\"]\");\n        dataSet[dataAttribute] = queryHash;\n        var mediaRules = '';\n        var flattenQueryStyle = StyleSheet.flatten(queryRule.style);\n        var newStyle = preprocess(flattenQueryStyle);\n        var _atomic = atomic(newStyle),\n          _atomic2 = _slicedToArray(_atomic, 2),\n          compiledStyle = _atomic2[0],\n          compiledOrderedRules = _atomic2[1];\n        delete compiledStyle.$$css;\n        Object.keys(compiledStyle).forEach(function (key) {\n          var oldIdentifier = compiledStyle[key];\n          compiledOrderedRules.forEach(function (_ref) {\n            var _ref2 = _slicedToArray(_ref, 2),\n              rules = _ref2[0],\n              _order = _ref2[1];\n            var newRule = '';\n            if (rules[0].includes(oldIdentifier)) {\n              newRule = rules[0].replace('.' + oldIdentifier, newIdentifier);\n            }\n            mediaRules += newRule;\n          });\n        });\n        if (mediaRules) {\n          var mediaQueryRule = getMediaQueryRule(queryRule, mediaRules);\n          var queryKey = \"/*\".concat(queryHash, \"{}*/\").concat(mediaQueryRule);\n          if (!textContentMap[queryKey]) {\n            insert(queryKey);\n            textContentMap[queryKey] = true;\n          }\n        }\n      }\n    });\n  }\n  return {\n    styles: styles,\n    dataSet: dataSet\n  };\n};\nexport var getStyleElement = function getStyleElement() {\n  return React.createElement(\"style\", {\n    type: \"text/css\",\n    dangerouslySetInnerHTML: {\n      __html: Object.keys(textContentMap).join('')\n    }\n  });\n};","map":{"version":3,"names":["atomic","preprocess","StyleSheet","stableHash","hash","useStableMemo","getResponsiveStylesImpl","useDimensionsWithEnable","ResponsiveQueryContext","React","textContentMap","useResponsiveQuery","queries","_queries$disableCSSMe","responsiveQueryContext","useContext","disableCSSMediaQueries","windowWidth","enable","width","values","getResponsiveStyles","_getResponsiveStyles2","styles","_getResponsiveStyles3","dataSet","getDataAttribute","queryRule","minWidth","maxWidth","concat","undefined","getMediaQueryRule","query","newRule","styleSheet","insert","rule","window","styleEl","document","createElement","type","appendChild","createTextNode","head","sheet","insertRule","cssRules","length","queryString","queriesHash","initial","create","flatten","forEach","queryHash","dataAttribute","newIdentifier","mediaRules","flattenQueryStyle","style","newStyle","_atomic","_atomic2","_slicedToArray","compiledStyle","compiledOrderedRules","$$css","Object","keys","key","oldIdentifier","_ref","_ref2","rules","_order","includes","replace","mediaQueryRule","queryKey","getStyleElement","dangerouslySetInnerHTML","__html","join"],"sources":["C:\\Users\\H P\\Desktop\\Daily Bite\\daily-bites\\frontend\\node_modules\\native-base\\lib\\module\\utils\\useResponsiveQuery\\useResponsiveQuery.web.tsx"],"sourcesContent":["// import { atomic } from 'react-native-web/dist/exports/StyleSheet/compiler';\nimport { atomic } from '../react-native-web-fucntions/atomic';\nimport preprocess from '../react-native-web-fucntions/preprocess';\nimport type {\n  DataSet,\n  Query,\n  UseResponsiveQueryParams,\n  UseResponsiveQueryReturnType,\n  GetResponsiveStylesParams,\n} from './types';\nimport { StyleSheet } from 'react-native';\n// @ts-ignore\nimport stableHash from 'stable-hash';\nimport hash from './hash';\nimport type { GetResponsiveStylesReturnType } from './types';\nimport { useStableMemo } from './useStableMemo';\nimport { getResponsiveStylesImpl, useDimensionsWithEnable } from './common';\nimport { ResponsiveQueryContext } from './ResponsiveQueryProvider';\nimport React from 'react';\n\n/******************** Implementation after RNW v0.18 ***********************/\n\n/**\n * 1. preprocess:- Handles shadow/text shadow conversion from RN styles to web *                 styles\n *\n * 2. atomic:- it handles prefixing, converting RN specific styles to web styles *             and generating the CSS selector.\n *             Input {marginTop: 10}\n *             Output\n *             compiledStyle : marginTop: \"r-marginTop-156q2ks\"\n *             compiledOrderedRules : \".r-marginTop-156q2ks{margin-top:10px;}\"\n *      a)compiledStyle:- Array it holds identifier/selector with properties\n *      b)compiledOrderedRules:- Array it holds the css rule with selector name\n *      Also from RNW v0.18 handles swapping of ltr styles if enabled by user\n * 3. createSheet:- used to grab sheet which exist already created by rnw. when we *                  call createSheet without id it will return sheet which exist. *                  cause it automatically takes a default ID  which is already in *                  use (created by rnw with default ID) so this return sheet *                  which exist with  ID doesn't create a new sheet.\n *\n * This Implementation is based on asumptions that RNW doesn't change the         * function  or doesn't re-write them. if there is any change in RNW implmentation * it we'll break and needs to be updated.\n *\n */\nlet textContentMap: any = {};\n\nexport const useResponsiveQuery = (\n  queries?: UseResponsiveQueryParams\n): UseResponsiveQueryReturnType => {\n  const responsiveQueryContext = React.useContext(ResponsiveQueryContext);\n  const disableCSSMediaQueries =\n    queries?.disableCSSMediaQueries ??\n    responsiveQueryContext.disableCSSMediaQueries;\n\n  // Only attaches listener if disableCSSMediaQueries is true\n  const windowWidth = useDimensionsWithEnable({\n    enable: disableCSSMediaQueries,\n  }).width;\n\n  const values = useStableMemo(() => {\n    // Use the non-media query responsive styling\n    if (disableCSSMediaQueries) {\n      const getResponsiveStyles = getResponsiveStylesImpl(windowWidth);\n      if (queries) {\n        const { styles } = getResponsiveStyles(queries);\n        return { styles, getResponsiveStyles };\n      } else {\n        return { getResponsiveStyles };\n      }\n    } else {\n      if (queries) {\n        const { styles, dataSet } = getResponsiveStyles(queries);\n        return { dataSet, styles, getResponsiveStyles };\n      } else {\n        return { getResponsiveStyles };\n      }\n    }\n  }, [queries, windowWidth, disableCSSMediaQueries]);\n\n  return values;\n};\n\nconst getDataAttribute = (queryRule: Query) => {\n  if (\n    typeof queryRule.minWidth === 'number' &&\n    typeof queryRule.maxWidth === 'number'\n  ) {\n    return `min-width-${queryRule.minWidth}-max-width-${queryRule.maxWidth}`;\n  } else if (typeof queryRule.minWidth === 'number') {\n    return `min-width-${queryRule.minWidth}`;\n  } else if (typeof queryRule.maxWidth === 'number') {\n    return `max-width-${queryRule.maxWidth}`;\n  }\n\n  return undefined;\n};\n\nconst getMediaQueryRule = (query: Query, newRule: string) => {\n  if (\n    typeof query.minWidth === 'number' &&\n    typeof query.maxWidth === 'number'\n  ) {\n    return `@media only screen and (min-width: ${query.minWidth}px) and (max-width: ${query.maxWidth}px) { ${newRule} }`;\n  } else if (typeof query.minWidth === 'number') {\n    return `@media only screen and (min-width: ${query.minWidth}px) { ${newRule} }`;\n  } else if (typeof query.maxWidth === 'number') {\n    return `@media only screen and (max-width: ${query.maxWidth}px) { ${newRule} }`;\n  }\n  return undefined;\n};\nlet styleSheet: any;\nconst insert = (rule: string) => {\n  if (rule === '') {\n    return;\n  }\n  if (typeof window !== 'undefined') {\n    if (!styleSheet) {\n      const styleEl = document.createElement('style');\n      styleEl.type = 'text/css';\n      styleEl.appendChild(document.createTextNode(''));\n      document.head.appendChild(styleEl);\n      styleSheet = styleEl.sheet;\n    }\n\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n};\nconst getResponsiveStyles = (\n  queries: GetResponsiveStylesParams\n): GetResponsiveStylesReturnType => {\n  const queryString = stableHash(queries.query);\n\n  const queriesHash = hash(queryString);\n\n  const styles = queries.initial\n    ? [\n        StyleSheet.create({ initial: StyleSheet.flatten(queries.initial) })\n          .initial,\n      ]\n    : undefined;\n\n  let dataSet: DataSet = {};\n\n  /**\n   * This function is copied from intergalacticspacehighway/rnw-responsive-ssr\n   */\n\n  if (queries.query) {\n    queries.query.forEach((queryRule) => {\n      const queryHash = queriesHash + hash(stableHash(queryRule));\n      const dataAttribute = getDataAttribute(queryRule);\n\n      if (dataAttribute) {\n        const newIdentifier = `[data-${dataAttribute}$=\"${queryHash}\"]`;\n        dataSet[dataAttribute] = queryHash;\n\n        let mediaRules = '';\n\n        const flattenQueryStyle = StyleSheet.flatten(queryRule.style);\n        const newStyle = preprocess(flattenQueryStyle);\n        const [compiledStyle, compiledOrderedRules] = atomic(newStyle);\n        //@ts-ignore\n        delete compiledStyle.$$css; //removing unnecessary $$css property\n        Object.keys(compiledStyle).forEach((key) => {\n          const oldIdentifier = compiledStyle[key];\n          compiledOrderedRules.forEach(([rules, _order]: any) => {\n            // Rule returned by atomic has css selectors, so we'll replace it with data-attr selector\n\n            let newRule = '';\n            if (rules[0].includes(oldIdentifier)) {\n              newRule = rules[0].replace('.' + oldIdentifier, newIdentifier);\n            }\n            mediaRules += newRule;\n          });\n        });\n        if (mediaRules) {\n          const mediaQueryRule = getMediaQueryRule(queryRule, mediaRules);\n\n          const queryKey = `/*${queryHash}{}*/${mediaQueryRule}`;\n\n          if (!textContentMap[queryKey]) {\n            insert(queryKey);\n            textContentMap[queryKey] = true;\n          }\n        }\n      }\n    });\n  }\n\n  return { styles, dataSet };\n};\n\n/**\n * This function is copied from intergalacticspacehighway/rnw-responsive-ssr\n */\nexport const getStyleElement = () => {\n  return (\n    <style\n      type=\"text/css\"\n      dangerouslySetInnerHTML={{ __html: Object.keys(textContentMap).join('') }}\n    />\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}