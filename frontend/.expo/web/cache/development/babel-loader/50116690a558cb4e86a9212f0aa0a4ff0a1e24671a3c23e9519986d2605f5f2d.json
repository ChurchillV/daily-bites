{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as stateChangeTypes from \"./types\";\nimport { getDefaultValue } from \"./utils\";\nexport function useTypeaheadReducer(state, action) {\n  var type = action.type,\n    props = action.props;\n  var changes;\n  switch (type) {\n    case stateChangeTypes.ItemClick:\n      changes = {\n        isOpen: getDefaultValue(props, 'isOpen'),\n        selectedItem: props.items[action.index],\n        inputValue: props.itemToString(props.items[action.index])\n      };\n      break;\n    case stateChangeTypes.InputBlur:\n      if (state.isOpen) {\n        changes = {\n          isOpen: false\n        };\n      }\n      break;\n    case stateChangeTypes.InputChange:\n      changes = {\n        isOpen: true,\n        inputValue: action.inputValue\n      };\n      break;\n    case stateChangeTypes.ToggleButtonClick:\n    case stateChangeTypes.FunctionToggleMenu:\n      changes = {\n        isOpen: !state.isOpen\n      };\n      break;\n    case stateChangeTypes.FunctionOpenMenu:\n      changes = {\n        isOpen: true\n      };\n      break;\n    case stateChangeTypes.FunctionCloseMenu:\n      changes = {\n        isOpen: false\n      };\n      break;\n    case stateChangeTypes.FunctionSelectItem:\n      changes = {\n        selectedItem: action.selectedItem,\n        inputValue: props.itemToString(action.selectedItem)\n      };\n      break;\n    case stateChangeTypes.ControlledPropUpdatedSelectedItem:\n    case stateChangeTypes.FunctionSetInputValue:\n      changes = {\n        inputValue: action.inputValue\n      };\n      break;\n    case stateChangeTypes.FunctionReset:\n      changes = {\n        isOpen: getDefaultValue(props, 'isOpen'),\n        selectedItem: getDefaultValue(props, 'selectedItem'),\n        inputValue: getDefaultValue(props, 'inputValue')\n      };\n      break;\n    default:\n      throw new Error('Reducer called without proper action type.');\n  }\n  return _objectSpread(_objectSpread({}, state), changes);\n}","map":{"version":3,"names":["stateChangeTypes","getDefaultValue","useTypeaheadReducer","state","action","type","props","changes","ItemClick","isOpen","selectedItem","items","index","inputValue","itemToString","InputBlur","InputChange","ToggleButtonClick","FunctionToggleMenu","FunctionOpenMenu","FunctionCloseMenu","FunctionSelectItem","ControlledPropUpdatedSelectedItem","FunctionSetInputValue","FunctionReset","Error","_objectSpread"],"sources":["C:\\Users\\H P\\Desktop\\Daily Bite\\daily-bites\\frontend\\node_modules\\native-base\\lib\\module\\components\\composites\\Typeahead\\useTypeahead\\reducer.tsx"],"sourcesContent":["import * as stateChangeTypes from './types';\nimport { getDefaultValue } from './utils';\n\ntype IState = {\n  isOpen: boolean;\n  selectedItem: any;\n  inputValue: string;\n};\n\nexport function useTypeaheadReducer(state: IState, action: any) {\n  const { type, props } = action;\n  let changes;\n\n  switch (type) {\n    case stateChangeTypes.ItemClick:\n      changes = {\n        isOpen: getDefaultValue(props, 'isOpen'),\n        selectedItem: props.items[action.index],\n        inputValue: props.itemToString(props.items[action.index]),\n      };\n      break;\n    case stateChangeTypes.InputBlur:\n      if (state.isOpen) {\n        changes = {\n          isOpen: false,\n        };\n      }\n      break;\n    case stateChangeTypes.InputChange:\n      changes = {\n        isOpen: true,\n        inputValue: action.inputValue,\n      };\n      break;\n\n    case stateChangeTypes.ToggleButtonClick:\n    case stateChangeTypes.FunctionToggleMenu:\n      changes = {\n        isOpen: !state.isOpen,\n      };\n      break;\n    case stateChangeTypes.FunctionOpenMenu:\n      changes = {\n        isOpen: true,\n      };\n      break;\n    case stateChangeTypes.FunctionCloseMenu:\n      changes = {\n        isOpen: false,\n      };\n      break;\n\n    case stateChangeTypes.FunctionSelectItem:\n      changes = {\n        selectedItem: action.selectedItem,\n        inputValue: props.itemToString(action.selectedItem),\n      };\n      break;\n    case stateChangeTypes.ControlledPropUpdatedSelectedItem:\n    case stateChangeTypes.FunctionSetInputValue:\n      changes = {\n        inputValue: action.inputValue,\n      };\n      break;\n    case stateChangeTypes.FunctionReset:\n      changes = {\n        isOpen: getDefaultValue(props, 'isOpen'),\n        selectedItem: getDefaultValue(props, 'selectedItem'),\n        inputValue: getDefaultValue(props, 'inputValue'),\n      };\n      break;\n    default:\n      throw new Error('Reducer called without proper action type.');\n  }\n\n  return {\n    ...state,\n    ...changes,\n  };\n}\n"],"mappings":";;;AAAA,OAAO,KAAKA,gBAAZ;AACA,SAASC,eAAT;AAQA,OAAO,SAASC,mBAATA,CAA6BC,KAA7B,EAA4CC,MAA5C,EAAyD;EAC9D,IAAQC,IAAF,GAAkBD,MAAxB,CAAQC,IAAF;IAAQC,KAAA,GAAUF,MAAxB,CAAcE,KAAA;EACd,IAAIC,OAAJ;EAEA,QAAQF,IAAR;IACE,KAAKL,gBAAgB,CAACQ,SAAtB;MACED,OAAO,GAAG;QACRE,MAAM,EAAER,eAAe,CAACK,KAAD,EAAQ,QAAR,CADf;QAERI,YAAY,EAAEJ,KAAK,CAACK,KAAN,CAAYP,MAAM,CAACQ,KAAnB,CAFN;QAGRC,UAAU,EAAEP,KAAK,CAACQ,YAAN,CAAmBR,KAAK,CAACK,KAAN,CAAYP,MAAM,CAACQ,KAAnB,CAAnB;MAHJ,CAAV;MAKA;IACF,KAAKZ,gBAAgB,CAACe,SAAtB;MACE,IAAIZ,KAAK,CAACM,MAAV,EAAkB;QAChBF,OAAO,GAAG;UACRE,MAAM,EAAE;QADA,CAAV;MAGD;MACD;IACF,KAAKT,gBAAgB,CAACgB,WAAtB;MACET,OAAO,GAAG;QACRE,MAAM,EAAE,IADA;QAERI,UAAU,EAAET,MAAM,CAACS;MAFX,CAAV;MAIA;IAEF,KAAKb,gBAAgB,CAACiB,iBAAtB;IACA,KAAKjB,gBAAgB,CAACkB,kBAAtB;MACEX,OAAO,GAAG;QACRE,MAAM,EAAE,CAACN,KAAK,CAACM;MADP,CAAV;MAGA;IACF,KAAKT,gBAAgB,CAACmB,gBAAtB;MACEZ,OAAO,GAAG;QACRE,MAAM,EAAE;MADA,CAAV;MAGA;IACF,KAAKT,gBAAgB,CAACoB,iBAAtB;MACEb,OAAO,GAAG;QACRE,MAAM,EAAE;MADA,CAAV;MAGA;IAEF,KAAKT,gBAAgB,CAACqB,kBAAtB;MACEd,OAAO,GAAG;QACRG,YAAY,EAAEN,MAAM,CAACM,YADb;QAERG,UAAU,EAAEP,KAAK,CAACQ,YAAN,CAAmBV,MAAM,CAACM,YAA1B;MAFJ,CAAV;MAIA;IACF,KAAKV,gBAAgB,CAACsB,iCAAtB;IACA,KAAKtB,gBAAgB,CAACuB,qBAAtB;MACEhB,OAAO,GAAG;QACRM,UAAU,EAAET,MAAM,CAACS;MADX,CAAV;MAGA;IACF,KAAKb,gBAAgB,CAACwB,aAAtB;MACEjB,OAAO,GAAG;QACRE,MAAM,EAAER,eAAe,CAACK,KAAD,EAAQ,QAAR,CADf;QAERI,YAAY,EAAET,eAAe,CAACK,KAAD,EAAQ,cAAR,CAFrB;QAGRO,UAAU,EAAEZ,eAAe,CAACK,KAAD,EAAQ,YAAR;MAHnB,CAAV;MAKA;IACF;MACE,MAAM,IAAImB,KAAJ,CAAU,4CAAV,CAAN;EA3DJ;EA8DA,OAAAC,aAAA,CAAAA,aAAA,KACKvB,KADE,GAEFI,OAAA;AAEN"},"metadata":{},"sourceType":"module","externalDependencies":[]}