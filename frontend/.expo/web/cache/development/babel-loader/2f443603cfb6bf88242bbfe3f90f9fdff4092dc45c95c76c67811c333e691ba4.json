{"ast":null,"code":"import { useSlotId as $iD7q0$useSlotId, mergeProps as $iD7q0$mergeProps, useId as $iD7q0$useId, useLabels as $iD7q0$useLabels } from \"@react-aria/utils\";\nfunction $d191a55c9702f145$export$8467354a121f1b9f(props) {\n  var id = props.id,\n    label = props.label,\n    ariaLabelledby = props[\"aria-labelledby\"],\n    ariaLabel = props[\"aria-label\"],\n    _props$labelElementTy = props.labelElementType,\n    labelElementType = _props$labelElementTy === void 0 ? \"label\" : _props$labelElementTy;\n  id = (0, $iD7q0$useId)(id);\n  var labelId = (0, $iD7q0$useId)();\n  var labelProps = {};\n  if (label) {\n    ariaLabelledby = ariaLabelledby ? `${labelId} ${ariaLabelledby}` : labelId;\n    labelProps = {\n      id: labelId,\n      htmlFor: labelElementType === \"label\" ? id : undefined\n    };\n  } else if (!ariaLabelledby && !ariaLabel) console.warn(\"If you do not provide a visible label, you must specify an aria-label or aria-labelledby attribute for accessibility\");\n  var fieldProps = (0, $iD7q0$useLabels)({\n    id: id,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby\n  });\n  return {\n    labelProps: labelProps,\n    fieldProps: fieldProps\n  };\n}\nfunction $2baaea4c71418dea$export$294aa081a6c6f55d(props) {\n  var description = props.description,\n    errorMessage = props.errorMessage,\n    validationState = props.validationState;\n  var _ref = (0, $d191a55c9702f145$export$8467354a121f1b9f)(props),\n    labelProps = _ref.labelProps,\n    fieldProps = _ref.fieldProps;\n  var descriptionId = (0, $iD7q0$useSlotId)([Boolean(description), Boolean(errorMessage), validationState]);\n  var errorMessageId = (0, $iD7q0$useSlotId)([Boolean(description), Boolean(errorMessage), validationState]);\n  fieldProps = (0, $iD7q0$mergeProps)(fieldProps, {\n    \"aria-describedby\": [descriptionId, errorMessageId, props[\"aria-describedby\"]].filter(Boolean).join(\" \") || undefined\n  });\n  return {\n    labelProps: labelProps,\n    fieldProps: fieldProps,\n    descriptionProps: {\n      id: descriptionId\n    },\n    errorMessageProps: {\n      id: errorMessageId\n    }\n  };\n}\nexport { $2baaea4c71418dea$export$294aa081a6c6f55d as useField, $d191a55c9702f145$export$8467354a121f1b9f as useLabel };","map":{"version":3,"names":["$d191a55c9702f145$export$8467354a121f1b9f","props","id","label","ariaLabelledby","ariaLabel","_props$labelElementTy","labelElementType","$iD7q0$useId","labelId","labelProps","htmlFor","undefined","console","warn","fieldProps","$iD7q0$useLabels","$2baaea4c71418dea$export$294aa081a6c6f55d","description","errorMessage","validationState","_ref","descriptionId","$iD7q0$useSlotId","Boolean","errorMessageId","$iD7q0$mergeProps","filter","join","descriptionProps","errorMessageProps"],"sources":["C:\\Users\\vinch\\OneDrive\\Desktop\\daily_bites\\frontend\\node_modules\\@react-aria\\label\\dist\\packages\\@react-aria\\label\\src\\index.ts","C:\\Users\\vinch\\OneDrive\\Desktop\\daily_bites\\frontend\\node_modules\\@react-aria\\label\\dist\\packages\\@react-aria\\label\\src\\useField.ts","C:\\Users\\vinch\\OneDrive\\Desktop\\daily_bites\\frontend\\node_modules\\@react-aria\\label\\dist\\packages\\@react-aria\\label\\src\\useLabel.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport type {AriaFieldProps, FieldAria} from './useField';\nexport type {LabelAriaProps, LabelAria} from './useLabel';\n\nexport {useField} from './useField';\nexport {useLabel} from './useLabel';\n","/*\n * Copyright 2021 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, HelpTextProps, Validation} from '@react-types/shared';\nimport {LabelAria, LabelAriaProps, useLabel} from './useLabel';\nimport {mergeProps, useSlotId} from '@react-aria/utils';\n\nexport interface AriaFieldProps extends LabelAriaProps, HelpTextProps, Omit<Validation, 'isRequired'> {}\n\nexport interface FieldAria extends LabelAria {\n  /** Props for the description element, if any. */\n  descriptionProps: DOMAttributes,\n  /** Props for the error message element, if any. */\n  errorMessageProps: DOMAttributes\n}\n\n/**\n * Provides the accessibility implementation for input fields.\n * Fields accept user input, gain context from their label, and may display a description or error message.\n * @param props - Props for the Field.\n */\nexport function useField(props: AriaFieldProps): FieldAria {\n  let {description, errorMessage, validationState} = props;\n  let {labelProps, fieldProps} = useLabel(props);\n\n  let descriptionId = useSlotId([Boolean(description), Boolean(errorMessage), validationState]);\n  let errorMessageId = useSlotId([Boolean(description), Boolean(errorMessage), validationState]);\n\n  fieldProps = mergeProps(fieldProps, {\n    'aria-describedby': [\n      descriptionId,\n      // Use aria-describedby for error message because aria-errormessage is unsupported using VoiceOver or NVDA. See https://github.com/adobe/react-spectrum/issues/1346#issuecomment-740136268\n      errorMessageId,\n      props['aria-describedby']\n    ].filter(Boolean).join(' ') || undefined\n  });\n\n  return {\n    labelProps,\n    fieldProps,\n    descriptionProps: {\n      id: descriptionId\n    },\n    errorMessageProps: {\n      id: errorMessageId\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaLabelingProps, DOMAttributes, DOMProps, LabelableProps} from '@react-types/shared';\nimport {ElementType, LabelHTMLAttributes} from 'react';\nimport {useId, useLabels} from '@react-aria/utils';\n\nexport interface LabelAriaProps extends LabelableProps, DOMProps, AriaLabelingProps {\n  /**\n   * The HTML element used to render the label, e.g. 'label', or 'span'.\n   * @default 'label'\n   */\n  labelElementType?: ElementType\n}\n\nexport interface LabelAria {\n  /** Props to apply to the label container element. */\n  labelProps: DOMAttributes | LabelHTMLAttributes<HTMLLabelElement>,\n  /** Props to apply to the field container element being labeled. */\n  fieldProps: AriaLabelingProps & DOMProps\n}\n\n/**\n * Provides the accessibility implementation for labels and their associated elements.\n * Labels provide context for user inputs.\n * @param props - The props for labels and fields.\n */\nexport function useLabel(props: LabelAriaProps): LabelAria {\n  let {\n    id,\n    label,\n    'aria-labelledby': ariaLabelledby,\n    'aria-label': ariaLabel,\n    labelElementType = 'label'\n  } = props;\n\n  id = useId(id);\n  let labelId = useId();\n  let labelProps = {};\n  if (label) {\n    ariaLabelledby = ariaLabelledby ? `${labelId} ${ariaLabelledby}` : labelId;\n    labelProps = {\n      id: labelId,\n      htmlFor: labelElementType === 'label' ? id : undefined\n    };\n  } else if (!ariaLabelledby && !ariaLabel) {\n    console.warn('If you do not provide a visible label, you must specify an aria-label or aria-labelledby attribute for accessibility');\n  }\n\n  let fieldProps = useLabels({\n    id,\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby\n  });\n\n  return {\n    labelProps,\n    fieldProps\n  };\n}\n"],"mappings":";AEoCO,SAASA,0CAASC,KAAqB;EAC5C,IACEC,EAAA,GAKED,KAAA,CANAC,EAAA;IAEFC,KAAA,GAIEF,KAAA,CALAE,KAAA;IAEiBC,cAAA,GAGjBH,KAAA,CAHF;IACcI,SAAA,GAEZJ,KAAA,CAFF;IAAAK,qBAAA,GAEEL,KAAA,CAFqBM,gBAAA;IACvBA,gBAAA,GAAAD,qBAAA,cAAmB,UAAAA,qBAAA;EAGrBJ,EAAA,GAAK,IAAAM,YAAI,EAAEN,EAAA;EACX,IAAIO,OAAA,GAAU,IAAAD,YAAI;EAClB,IAAIE,UAAA,GAAa,CAAC;EAClB,IAAIP,KAAA,EAAO;IACTC,cAAA,GAAiBA,cAAA,GAAkB,GAAEK,OAAQ,IAAGL,cAAe,EAAC,GAAGK,OAAA;IACnEC,UAAA,GAAa;MACXR,EAAA,EAAIO,OAAA;MACJE,OAAA,EAASJ,gBAAA,KAAqB,UAAUL,EAAA,GAAKU;IAC/C;EACF,OAAO,IAAI,CAACR,cAAA,IAAkB,CAACC,SAAA,EAC7BQ,OAAA,CAAQC,IAAA,CAAK;EAGf,IAAIC,UAAA,GAAa,IAAAC,gBAAQ,EAAE;QACzBd,EAAA;IACA,cAAcG,SAAA;IACd,mBAAmBD;EACrB;EAEA,OAAO;gBACLM,UAAA;gBACAK;EACF;AACF;ADtCO,SAASE,0CAAShB,KAAqB;EAC5C,IAAKiB,WAAA,GAA8CjB,KAAA,CAA/CiB,WAAA;IAAcC,YAAA,GAAiClB,KAAA,CAAnCkB,YAAA;IAAgBC,eAAA,GAAmBnB,KAAA,CAArBmB,eAAA;EAC9B,IAAAC,IAAA,GAA+B,IAAArB,yCAAO,EAAEC,KAAA;IAAnCS,UAAA,GAAAW,IAAA,CAADX,UAAA;IAAaK,UAAA,GAAAM,IAAA,CAAFN,UAAA;EAEf,IAAIO,aAAA,GAAgB,IAAAC,gBAAQ,EAAE,CAACC,OAAA,CAAQN,WAAA,GAAcM,OAAA,CAAQL,YAAA,GAAeC,eAAA,CAAgB;EAC5F,IAAIK,cAAA,GAAiB,IAAAF,gBAAQ,EAAE,CAACC,OAAA,CAAQN,WAAA,GAAcM,OAAA,CAAQL,YAAA,GAAeC,eAAA,CAAgB;EAE7FL,UAAA,GAAa,IAAAW,iBAAS,EAAEX,UAAA,EAAY;IAClC,oBAAoB,CAClBO,aAAA,EAEAG,cAAA,EACAxB,KAAK,CAAC,mBAAmB,CAC1B,CAAC0B,MAAA,CAAOH,OAAA,EAASI,IAAA,CAAK,QAAQhB;EACjC;EAEA,OAAO;gBACLF,UAAA;gBACAK,UAAA;IACAc,gBAAA,EAAkB;MAChB3B,EAAA,EAAIoB;IACN;IACAQ,iBAAA,EAAmB;MACjB5B,EAAA,EAAIuB;IACN;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}