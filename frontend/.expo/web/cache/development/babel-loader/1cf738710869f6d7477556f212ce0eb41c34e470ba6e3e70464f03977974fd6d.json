{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"ratio\", \"children\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { forwardRef, memo } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { default as Box } from \"../../primitives/Box\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nimport { usePropsResolution } from \"../../../hooks\";\nvar AspectView = forwardRef(function (props, ref) {\n  var _React$useState = React.useState(),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    layout = _React$useState2[0],\n    setLayout = _React$useState2[1];\n  var aspectViewStyle = [StyleSheet.flatten(props.style) || {}];\n  if (layout) {\n    var _layout$width = layout.width,\n      width = _layout$width === void 0 ? 0 : _layout$width,\n      _layout$height = layout.height,\n      height = _layout$height === void 0 ? 0 : _layout$height;\n    if (width === 0) {\n      aspectViewStyle.push({\n        width: height * props.aspectRatio,\n        height: height\n      });\n    } else {\n      aspectViewStyle.push({\n        width: width,\n        height: width / props.aspectRatio\n      });\n    }\n  }\n  return React.createElement(Box, _extends({\n    ref: ref\n  }, props, {\n    style: aspectViewStyle,\n    onLayout: function onLayout(_ref) {\n      var inLayout = _ref.nativeEvent.layout;\n      return setLayout(inLayout);\n    }\n  }));\n});\nvar AspectRatio = function AspectRatio(props, ref) {\n  var _children$props;\n  var _usePropsResolution = usePropsResolution('AspectRatio', props, {}, {\n      resolveResponsively: ['ratio']\n    }),\n    ratio = _usePropsResolution.ratio,\n    _usePropsResolution$c = _usePropsResolution.children,\n    children = _usePropsResolution$c === void 0 ? React.createElement(React.Fragment, null) : _usePropsResolution$c,\n    resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded);\n  var computedStyle = resolvedProps.style;\n  var newChildWithProps = React.cloneElement(children, _objectSpread(_objectSpread({}, children === null || children === void 0 ? void 0 : children.props), {}, {\n    style: StyleSheet.absoluteFillObject\n  }), children === null || children === void 0 ? void 0 : (_children$props = children.props) === null || _children$props === void 0 ? void 0 : _children$props.children);\n  if (useHasResponsiveProps(resolvedProps)) {\n    return null;\n  }\n  if (Platform.OS === 'web') {\n    return React.createElement(AspectView, _extends({\n      aspectRatio: ratio\n    }, resolvedProps, {\n      ref: ref\n    }), newChildWithProps);\n  } else {\n    computedStyle = StyleSheet.flatten([{\n      style: resolvedProps.style\n    }, {\n      aspectRatio: ratio\n    }]);\n    return React.createElement(Box, _extends({}, resolvedProps, {\n      style: computedStyle,\n      ref: ref\n    }), newChildWithProps);\n  }\n};\nexport default memo(forwardRef(AspectRatio));","map":{"version":3,"names":["React","forwardRef","memo","StyleSheet","Platform","default","Box","useHasResponsiveProps","usePropsResolution","AspectView","props","ref","_React$useState","useState","_React$useState2","_slicedToArray","layout","setLayout","aspectViewStyle","flatten","style","_layout$width","width","_layout$height","height","push","aspectRatio","createElement","_extends","onLayout","_ref","inLayout","nativeEvent","AspectRatio","_children$props","_usePropsResolution","resolveResponsively","ratio","_usePropsResolution$c","children","Fragment","resolvedProps","_objectWithoutProperties","_excluded","computedStyle","newChildWithProps","cloneElement","_objectSpread","absoluteFillObject","OS"],"sources":["C:\\Users\\vinch\\OneDrive\\Desktop\\daily_bites\\frontend\\node_modules\\native-base\\lib\\module\\components\\composites\\AspectRatio\\index.tsx"],"sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport { StyleSheet, ViewStyle, Platform } from 'react-native';\nimport { default as Box } from '../../primitives/Box';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { usePropsResolution } from '../../../hooks';\nimport type { IAspectRatioProps } from './types';\n\nconst AspectView = forwardRef((props: any, ref?: any) => {\n  const [layout, setLayout] = React.useState();\n  const aspectViewStyle = [StyleSheet.flatten(props.style) || {}];\n  if (layout) {\n    // @ts-ignore\n    let { width = 0, height = 0 } = layout;\n    if (width === 0) {\n      aspectViewStyle.push({ width: height * props.aspectRatio, height });\n    } else {\n      aspectViewStyle.push({ width, height: width / props.aspectRatio });\n    }\n  }\n\n  return (\n    <Box\n      ref={ref}\n      {...props}\n      style={aspectViewStyle}\n      onLayout={({ nativeEvent: { layout: inLayout } }: any) =>\n        setLayout(inLayout)\n      }\n    />\n  );\n});\n\nconst AspectRatio = (props: IAspectRatioProps, ref?: any) => {\n  const { ratio, children = <></>, ...resolvedProps } = usePropsResolution(\n    'AspectRatio',\n    props,\n    {},\n    { resolveResponsively: ['ratio'] }\n  );\n  let computedStyle: ViewStyle | undefined = resolvedProps.style;\n  const newChildWithProps = React.cloneElement(\n    children,\n    {\n      ...children?.props,\n      style: StyleSheet.absoluteFillObject,\n    },\n    children?.props?.children\n  );\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(resolvedProps)) {\n    return null;\n  }\n  // DOC:  It uses a aspectRatio property of React Native and manually calculate on Web\n  if (Platform.OS === 'web') {\n    return (\n      <AspectView aspectRatio={ratio} {...resolvedProps} ref={ref}>\n        {newChildWithProps}\n      </AspectView>\n    );\n  } else {\n    computedStyle = StyleSheet.flatten([\n      { style: resolvedProps.style },\n      { aspectRatio: ratio },\n    ]);\n    return (\n      <Box {...resolvedProps} style={computedStyle} ref={ref}>\n        {newChildWithProps}\n      </Box>\n    );\n  }\n};\n\nexport default memo(forwardRef(AspectRatio));\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}