{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useEffect, useState } from 'react';\nimport { useTheme } from \"../hooks/useTheme\";\nimport { useNativeBaseConfig } from \"../core/NativeBaseContext\";\nimport { isResponsiveAnyProp } from \"../theme/tools\";\nexport function useResponsiveSSRProps(incomingProps) {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modified = _useState2[0],\n    setModified = _useState2[1];\n  var theme = useTheme();\n  var responsivePropsExists = isResponsiveAnyProp(incomingProps, theme);\n  var isSSR = useNativeBaseConfig('useBreakpointResolvedProps').isSSR;\n  var modifiedProps = incomingProps;\n  if (responsivePropsExists && isSSR && !modified) {\n    modifiedProps = _objectSpread(_objectSpread({}, modifiedProps), {}, {\n      key: Math.random()\n    });\n  }\n  useEffect(function () {\n    if (responsivePropsExists && isSSR) {\n      setModified(true);\n    }\n  }, [responsivePropsExists, isSSR]);\n  return modifiedProps;\n}","map":{"version":3,"names":["useEffect","useState","useTheme","useNativeBaseConfig","isResponsiveAnyProp","useResponsiveSSRProps","incomingProps","_useState","_useState2","_slicedToArray","modified","setModified","theme","responsivePropsExists","isSSR","modifiedProps","_objectSpread","key","Math","random"],"sources":["C:\\Users\\vinch\\OneDrive\\Desktop\\daily_bites\\frontend\\node_modules\\native-base\\lib\\module\\hooks\\useResponsiveSSRProps.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useTheme } from '../hooks/useTheme';\nimport { useNativeBaseConfig } from '../core/NativeBaseContext';\nimport { isResponsiveAnyProp } from '../theme/tools';\n\nexport function useResponsiveSSRProps(incomingProps: any) {\n  const [modified, setModified] = useState(false);\n  const theme = useTheme();\n\n  const responsivePropsExists = isResponsiveAnyProp(incomingProps, theme);\n  const isSSR = useNativeBaseConfig('useBreakpointResolvedProps').isSSR;\n\n  let modifiedProps = incomingProps;\n  if (responsivePropsExists && isSSR && !modified) {\n    modifiedProps = { ...modifiedProps, key: Math.random() };\n  }\n  useEffect((): any => {\n    if (responsivePropsExists && isSSR) {\n      setModified(true);\n    }\n  }, [responsivePropsExists, isSSR]);\n\n  return modifiedProps;\n}\n"],"mappings":";;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT;AACA,SAASC,mBAAT;AACA,SAASC,mBAAT;AAEA,OAAO,SAASC,qBAATA,CAA+BC,aAA/B,EAAmD;EACxD,IAAAC,SAAA,GAAgCN,QAAQ,CAAC,KAAD,CAAxC;IAAAO,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAOG,QAAD,GAAAF,UAAA;IAAWG,WAAX,GAAAH,UAAA;EACN,IAAMI,KAAK,GAAGV,QAAQ,EAAtB;EAEA,IAAMW,qBAAqB,GAAGT,mBAAmB,CAACE,aAAD,EAAgBM,KAAhB,CAAjD;EACA,IAAME,KAAK,GAAGX,mBAAmB,CAAC,4BAAD,CAAnB,CAAkDW,KAAhE;EAEA,IAAIC,aAAa,GAAGT,aAApB;EACA,IAAIO,qBAAqB,IAAIC,KAAzB,IAAkC,CAACJ,QAAvC,EAAiD;IAC/CK,aAAa,GAAAC,aAAA,CAAAA,aAAA,KAAQD,aAAL;MAAoBE,GAAG,EAAEC,IAAI,CAACC,MAAL;IAAA,EAAzC;EACD;EACDnB,SAAS,CAAC,YAAW;IACnB,IAAIa,qBAAqB,IAAIC,KAA7B,EAAoC;MAClCH,WAAW,CAAC,IAAD,CAAX;IACD;EACF,CAJQ,EAIN,CAACE,qBAAD,EAAwBC,KAAxB,CAJM,CAAT;EAMA,OAAOC,aAAP;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}