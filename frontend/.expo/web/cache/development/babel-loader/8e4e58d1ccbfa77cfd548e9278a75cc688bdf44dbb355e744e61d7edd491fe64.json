{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"startColor\", \"endColor\"];\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nimport React, { memo, forwardRef } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { usePropsResolution } from \"../../../hooks\";\nimport { canUseDom } from \"../../../utils\";\nimport Box from \"../../primitives/Box\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nimport { useToken } from \"../../../hooks/useToken\";\nvar Skeleton = function Skeleton(props, ref) {\n  var isDomUsable = canUseDom();\n  var _usePropsResolution = usePropsResolution('Skeleton', props),\n    children = _usePropsResolution.children,\n    startColor = _usePropsResolution.startColor,\n    endColor = _usePropsResolution.endColor,\n    resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded);\n  var blinkAnim = React.useRef(new Animated.Value(0)).current;\n  var tokenisedStartColor = useToken('colors', startColor);\n  React.useEffect(function () {\n    if (isDomUsable) {\n      var blink = Animated.sequence([Animated.timing(blinkAnim, {\n        toValue: 1,\n        duration: resolvedProps.fadeDuration * 10000 * (1 / resolvedProps.speed),\n        useNativeDriver: Platform.OS !== 'web'\n      }), Animated.timing(blinkAnim, {\n        toValue: 0,\n        duration: resolvedProps.fadeDuration * 10000 * (1 / resolvedProps.speed),\n        useNativeDriver: Platform.OS !== 'web'\n      })]);\n      Animated.loop(blink).start();\n    }\n  }, [blinkAnim, isDomUsable, resolvedProps]);\n  var skeletonStyle = {\n    skeleton: {\n      height: '100%',\n      width: '100%',\n      backgroundColor: tokenisedStartColor,\n      opacity: blinkAnim\n    }\n  };\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return resolvedProps.isLoaded ? children : React.createElement(Box, _extends({\n    bg: endColor\n  }, resolvedProps, {\n    ref: ref\n  }), React.createElement(Animated.View, {\n    style: skeletonStyle.skeleton\n  }));\n};\nexport default memo(forwardRef(Skeleton));","map":{"version":3,"names":["React","memo","forwardRef","Animated","Platform","usePropsResolution","canUseDom","Box","useHasResponsiveProps","useToken","Skeleton","props","ref","isDomUsable","_usePropsResolution","children","startColor","endColor","resolvedProps","_objectWithoutProperties","_excluded","blinkAnim","useRef","Value","current","tokenisedStartColor","useEffect","blink","sequence","timing","toValue","duration","fadeDuration","speed","useNativeDriver","OS","loop","start","skeletonStyle","skeleton","height","width","backgroundColor","opacity","isLoaded","createElement","_extends","bg","View","style"],"sources":["C:\\Users\\H P\\Desktop\\Daily Bite\\daily-bites\\frontend\\node_modules\\native-base\\lib\\module\\components\\composites\\Skeleton\\Skeleton.tsx"],"sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Animated, Platform } from 'react-native';\nimport { usePropsResolution } from '../../../hooks';\nimport { canUseDom } from '../../../utils';\nimport Box from '../../primitives/Box';\nimport type { ISkeletonProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { useToken } from '../../../hooks/useToken';\n\nconst Skeleton = (props: ISkeletonProps, ref: any) => {\n  const isDomUsable = canUseDom();\n  const {\n    children,\n    startColor,\n    endColor,\n    ...resolvedProps\n  } = usePropsResolution('Skeleton', props);\n  // Setting blink Animation\n  const blinkAnim = React.useRef(new Animated.Value(0)).current;\n  const tokenisedStartColor = useToken('colors', startColor);\n\n  // Generating blink animation in a sequence\n  React.useEffect(() => {\n    //Check if window is loaded\n    if (isDomUsable) {\n      const blink = Animated.sequence([\n        Animated.timing(blinkAnim, {\n          toValue: 1,\n          duration:\n            resolvedProps.fadeDuration * 10000 * (1 / resolvedProps.speed),\n          useNativeDriver: Platform.OS !== 'web',\n        }),\n        Animated.timing(blinkAnim, {\n          toValue: 0,\n          duration:\n            resolvedProps.fadeDuration * 10000 * (1 / resolvedProps.speed),\n          useNativeDriver: Platform.OS !== 'web',\n        }),\n      ]);\n      Animated.loop(blink).start();\n    }\n  }, [blinkAnim, isDomUsable, resolvedProps]);\n\n  const skeletonStyle: any = {\n    skeleton: {\n      height: '100%',\n      width: '100%',\n      backgroundColor: tokenisedStartColor,\n      opacity: blinkAnim, // Bind opacity to animated value\n    },\n  };\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return resolvedProps.isLoaded ? (\n    children\n  ) : (\n    <Box bg={endColor} {...resolvedProps} ref={ref}>\n      <Animated.View style={skeletonStyle.skeleton} />\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(Skeleton));\n"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,QAAwC,OAAxC;AAAA,OAAAC,QAAA;AAAA,OAAAC,QAAA;AAEA,SAASC,kBAAT;AACA,SAASC,SAAT;AACA,OAAOC,GAAP;AAEA,SAASC,qBAAT;AACA,SAASC,QAAT;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,KAAD,EAAwBC,GAAxB,EAAqC;EACpD,IAAMC,WAAW,GAAGP,SAAS,EAA7B;EACA,IAAAQ,mBAAA,GAKIT,kBAAkB,CAAC,UAAD,EAAaM,KAAb,CALtB;IACEI,QADI,GAAAD,mBAAA,CACJC,QADI;IAEJC,UAFI,GAAAF,mBAAA,CAEJE,UAFI;IAGJC,QAHI,GAAAH,mBAAA,CAGJG,QAHI;IAIDC,aAAA,GAAAC,wBAAA,CAAAL,mBAAA,EAAAM,SAAA;EAGL,IAAMC,SAAS,GAAGrB,KAAK,CAACsB,MAAN,CAAa,IAAInB,QAAQ,CAACoB,KAAb,CAAmB,CAAnB,CAAb,EAAoCC,OAAtD;EACA,IAAMC,mBAAmB,GAAGhB,QAAQ,CAAC,QAAD,EAAWO,UAAX,CAApC;EAGAhB,KAAK,CAAC0B,SAAN,CAAgB,YAAM;IAEpB,IAAIb,WAAJ,EAAiB;MACf,IAAMc,KAAK,GAAGxB,QAAQ,CAACyB,QAAT,CAAkB,CAC9BzB,QAAQ,CAAC0B,MAAT,CAAgBR,SAAhB,EAA2B;QACzBS,OAAO,EAAE,CADgB;QAEzBC,QAAQ,EACNb,aAAa,CAACc,YAAd,GAA6B,KAA7B,IAAsC,IAAId,aAAa,CAACe,KAAxD,CAHuB;QAIzBC,eAAe,EAAE9B,QAAQ,CAAC+B,EAAT,KAAgB;MAJR,CAA3B,CAD8B,EAO9BhC,QAAQ,CAAC0B,MAAT,CAAgBR,SAAhB,EAA2B;QACzBS,OAAO,EAAE,CADgB;QAEzBC,QAAQ,EACNb,aAAa,CAACc,YAAd,GAA6B,KAA7B,IAAsC,IAAId,aAAa,CAACe,KAAxD,CAHuB;QAIzBC,eAAe,EAAE9B,QAAQ,CAAC+B,EAAT,KAAgB;MAJR,CAA3B,CAP8B,CAAlB,CAAd;MAcAhC,QAAQ,CAACiC,IAAT,CAAcT,KAAd,EAAqBU,KAArB;IACD;EACF,CAnBD,EAmBG,CAAChB,SAAD,EAAYR,WAAZ,EAAyBK,aAAzB,CAnBH;EAqBA,IAAMoB,aAAkB,GAAG;IACzBC,QAAQ,EAAE;MACRC,MAAM,EAAE,MADA;MAERC,KAAK,EAAE,MAFC;MAGRC,eAAe,EAAEjB,mBAHT;MAIRkB,OAAO,EAAEtB;IAJD;EADe,CAA3B;EAUA,IAAIb,qBAAqB,CAACG,KAAD,CAAzB,EAAkC;IAChC,OAAO,IAAP;EACD;EAED,OAAOO,aAAa,CAAC0B,QAAd,GACL7B,QADK,GAGLf,KAAA,CAAA6C,aAAA,CAACtC,GAAD,EAAAuC,QAAA;IAAKC,EAAE,EAAE9B;EAAT,GAAuBC,aAAvB;IAAsCN,GAAG,EAAEA;EAA3C,IACEZ,KAAA,CAAA6C,aAAA,CAAC1C,QAAD,CAAU6C,IAAV;IAAeC,KAAK,EAAEX,aAAa,CAACC;EAApC,EADF,CAHF;AAOD,CAvDD;AAyDA,eAAetC,IAAI,CAACC,UAAU,CAACQ,QAAD,CAAX,CAAnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}